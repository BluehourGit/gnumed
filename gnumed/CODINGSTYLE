
use speaking identifiers as much as possible for self documentation of code


classes:

	normal classes:
		cCamelCase

	singleton classes:
		gmCamelCase


methods, functions:

	def lower_case_function_name(...):
		assert
	def lower_case_method_name(self, ...):
		assert

	prefer keyword arguments


constants:

	UPPER_CASE_NAME


module file layout:

	# -*- coding: utf-8 -*-

	__doc__ = """line 1
		line 2
		line 3
	"""
	#============================================================
	# SPDX-License-Identifier: GPL-2.0-or-later
	__author__ = "..."
	__license__ = "..."

	# standard library imports
	import sys

	# 3rd party library imports
	import ...

	if __name__ == '__main__':
		sys.path.insert(0, '../../')
	# GNUmed module imports
	from Gnumed.pycommon import ...

	# CONSTANTS
	A_FIXED_VALUE = 'abc'

	# globals
	_log = logging.getLogger('gm.ABCD')
	#============================================================

	... code ...

	#============================================================
	# main
	#------------------------------------------------------------
	if __name__ == "__main__":

		if len(sys.argv) < 2:
			sys.exit()

		if sys.argv[1] != 'test':
			sys.exit()

		... test code ...
