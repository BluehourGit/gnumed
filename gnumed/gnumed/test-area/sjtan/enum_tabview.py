#!/usr/bin/env python
# generated by wxGlade 0.2 on Sun Feb  2 13:35:46 2003

from wxPython.wx import *

class MyFrame(wxFrame):
    def __init__(self, *args, **kwds):
	self.table = kwds["table"]
	self.labelfield = kwds["labelfield"]
	del kwds["table"]		
	del kwds["labelfield"]		
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wxDEFAULT_FRAME_STYLE
        wxFrame.__init__(self, *args, **kwds)
        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        # end wxGlade

    def __do_layout(self):

        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wxBoxSizer(wxHORIZONTAL)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade
	sizer_1.Add(EnumTabView(self, -1, url = 'http://localhost:9000', labelfield = self.labelfield, table = self.table), wxEXPAND)

# end of class MyFrame

from xmlrpclib import *
class EnumTabView(wxPanel):

    def __config_tabs(self):
	self.panes = {}
	for x in self.tabs:
	    pane = wxPanel( self.notebook_2, -1)
	    self.panes[x] = pane
	    self.notebook_2.AddPage(pane, x)
		    
	   
    def __init__(self, *args, **kwds):
	self.__init_config( args, kwds)
        # begin wxGlade: EnumTabView.__init__
        kwds["style"] = wxTAB_TRAVERSAL
        wxPanel.__init__(self, *args, **kwds)
        self.notebook_2 = wxNotebook(self, -1, style=0)
        self.notebook_2_pane_1 = wxPanel(self.notebook_2 , -1)
        self.button_6 = wxButton(self, -1, "modify tabs")

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __init_config(self, args, kwds):
	self.server = Server( kwds['url'] )
	label_field = None
	if kwds.has_key('labelfield'):
		label_field = kwds["labelfield"]
	if label_field == None:
		label_field ="description"
	
	exec "result  = self.server.select_all_"+kwds['table'] + "()"
	exec "fields = self.server.describe_fields_"+kwds['table']+"()"
	
	c = 0
	if fields == [] :
		fields = ["past", "presenting", "family", "immunize", "drug", "other"]
	for x in fields:
		if (x[0] == label_field):
			break
		c = c + 1
	
	if c > len(fields):
		return

	dlist = []
	for x in result:
		dlist.append(x[c])
	
	print " the tabs should be ", dlist

	self.tabs = dlist	
	
	del kwds['table']
	del kwds['labelfield']
	del kwds['url']
	
	

    def __set_properties(self):
        # begin wxGlade: EnumTabView.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
	    
	self.__config_tabs( )
        # begin wxGlade: EnumTabView.__do_layout
        grid_sizer_2 = wxFlexGridSizer(2, 1, 0, 0)
        sizer_8 = wxBoxSizer(wxHORIZONTAL)
        notebook_2_sizer = wxNotebookSizer(self.notebook_2)
        self.notebook_2.AddPage(self.notebook_2_pane_1, "tab1")
        grid_sizer_2.Add(notebook_2_sizer, 1, wxEXPAND, 0)
        sizer_8.Add(self.button_6, 0, 0, 0)
        sizer_8.Add(20, 20, 0, 0, 0)
        sizer_8.Add(20, 20, 0, 0, 0)
        grid_sizer_2.Add(sizer_8, 1, wxEXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(grid_sizer_2)
        grid_sizer_2.Fit(self)
        grid_sizer_2.SetSizeHints(self)
        grid_sizer_2.AddGrowableRow(0)
        grid_sizer_2.AddGrowableCol(0)
        self.Layout()
        # end wxGlade

# end of class EnumTabView


class MyApp( wxApp) :
        def OnInit(self):

                wxInitAllImageHandlers()
                frame = MyFrame( None, -1, "Harry" , table="enum_clinical_history", labelfield = 'description')
		
                frame.SetSize((800,600))
                self.SetTopWindow(frame)
                frame.Show()
                return true

def main():
        app = MyApp(0)
        app.MainLoop()

if __name__ == '__main__':
        main()
