# GnuMed user/group setup file
#----------------------------------
# license: GPL
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/test-area/blobs_hilbert/server/Attic/bootstrap-gm_db_system.conf,v $
version = $Revision: 1.1 $

#----------------------------------
# DB server hosting core database
# these shouldn't be changed, really
[core server]

# - should in most cases be localhost as we don't want
#   to transmit passwords over remote links
# - also, we need to do some things as a database superuser
#   (such as installing procedural languages) but we
#   do not want to be able to connect remotely as superuser
name = localhost	# fill in your server name/IP here
port = 5432			# standard is 5432

# the database we connect to before any GnuMed database exists
initial database = template1

# this must be a super user capable of installing procedural languages
initial user = postgres

#----------------------------------
# these really shouldn't be changed
[GnuMed defaults]

# minimum PostgreSQL version for proper operation
postgres version = 7.1

# all GnuMed tables belong to this user
gnumed database owner = gm-dbowner

# this is the core GnuMed database everything else hinges upon
core database name = gm-archive

core database schema = $core database schema$
gmconfiguration.sql
gmidentity.sql
gmgis.sql
gmBlobs.sql
german-doc_types.sql
$core database schema$

# - these are the standard groups that exist
#   in every GnuMed database
# - note how some groups don't have a write-enabled counterpart
# - you can define (and probably should) define site-specific
#   groups in another file
# - at the end of the setup you'll be asked if you want to
#   install your site-specific groups/users, too
groups = $groups$
gm-doctors
_gm-doctors
gm-staff_medical
_gm-staff_medical
gm-staff_office
_gm-staff_office
gm-trainees_medical
gm-trainees_office
gm-public
$groups$

# - activate these backend languages
# - the names just point to the corresponding sections
procedural languages = $procedural languages$
pg/SQL
pg/Python
$procedural languages$

# - we can safely list any directory here that we come
#   across on any distribution
# - the first match will be used
# - reorder the list if you want to force a particular
#   directory to be used for a particular language
language library dirs = $language library dirs$
/usr/lib/postgresql/lib/
/usr/lib/pgsql/
$language library dirs$

#----------------------------------
[pg/SQL]
library name = plpgsql.so

call handler = $call handler$
CREATE FUNCTION plpgsql_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpgsql' HANDLER plpgsql_call_handler LANCOMPILER 'PL/pgSQL';
$language activation$

#----------------------------------
[pg/Python]
library name = plpython.so

call handler = $call handler$
CREATE FUNCTION plpython_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpython' HANDLER plpython_call_handler;
$language activation$

#----------------------------------
# this is a setup for testing
# don't use this on a production server
[test users]

# - list all the users here that you want to set up
# - you will then need to define a [section] per user
#   giving more detail
#
# - you should definitely disable the sample account
#   and define your own users
users = $users$
test-doc
_test-doc
test-nurse
_test-nurse
test-secretary
_test-secretary
$users$

#----------------------------------
[test-doc]
valid until = 2003-12-31

# which groups this user shall belong to
groups = $groups$
gm-doctors
gm-public
$groups$

# custom SQL commands for this user
custom = $custom$
$custom$

#----------------------------------
[_test-doc]
valid until = 2003-12-31

# which groups this user shall belong to
groups = $groups$
gm-doctors
_gm-doctors
gm-public
$groups$

# custom SQL commands for this user
custom = $custom$
$custom$

#----------------------------------
[test-nurse]
valid until = 2003-12-31

# which groups this user shall belong to
groups = $groups$
gm-staff_medical
gm-public
$groups$

# custom SQL commands for this user
custom = $custom$
$custom$

#----------------------------------
[_test-nurse]
valid until = 2003-12-31

# which groups this user shall belong to
groups = $groups$
gm-staff_medical
_gm-staff_medical
gm-public
$groups$

# custom SQL commands for this user
custom = $custom$
$custom$

#----------------------------------
[test-secretary]
valid until = 2003-12-31

# which groups this user shall belong to
groups = $groups$
gm-staff_office
gm-public
$groups$

# custom SQL commands for this user
custom = $custom$
$custom$

#----------------------------------
[_test-secretary]
valid until = 2003-12-31

# which groups this user shall belong to
groups = $groups$
gm-staff_office
_gm-staff_office
gm-public
$groups$

# custom SQL commands for this user
custom = $custom$
$custom$

#----------------------------------
# $Log: bootstrap-gm_db_system.conf,v $
# Revision 1.1  2002-11-15 23:38:37  ncq
# - final files for making a distro "GnuMed-Archive"
#
# Revision 1.2  2002/11/01 13:56:05  ncq
# - now also installs the GnuMed core database "gnumed"
#
# Revision 1.1  2002/10/31 22:59:19  ncq
# - tests environment, bootstraps users, bootstraps procedural languages
# - basically replaces gnumed.sql and setup-users.py
#
# Revision 1.9  2002/10/29 23:03:32  ncq
# - gm-public is intended to be a group holding _all_ gnumed users
# - useful for access to select on config/db setup etc.
#
# Revision 1.8  2002/10/29 22:54:06  ncq
# - consistenly use "gm-" prefix for GnuMed groups/users (except for test users)
#
# Revision 1.7  2002/10/20 15:29:14  ncq
# - now has support for site-specific configuration in a separate file
# - remembers passwords from "usr" to "_usr"
#
# Revision 1.6  2002/10/08 14:08:37  ncq
# - seems to fully work now
#
# Revision 1.5  2002/10/04 15:49:08  ncq
# - name default users/groups usefully
#
# Revision 1.4  2002/10/03 14:05:36  ncq
# - actually create the gnumed superuser
#
# Revision 1.3  2002/10/03 00:22:37  ncq
# - add a clarifying comment
#
# Revision 1.2  2002/10/03 00:16:20  ncq
# - first real steps: connect and verify database version
#
# Revision 1.1  2002/09/30 23:06:26  ncq
# - first shot so people can see what I am getting at
#
