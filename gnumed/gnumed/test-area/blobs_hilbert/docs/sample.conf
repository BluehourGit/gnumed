# sample config file for GNUmed document archive binaries
# $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/test-area/blobs_hilbert/docs/Attic/sample.conf,v $
# $Revision: 1.2 $
#-----------------------------------------------------------------
# The config file needs to have the same name as the binary
# with .py replaced by .conf so that the config file can be
# found automatically. You can put the config file in either
# of the following places:
#
# - ~/.<name-of-binary>/<name-of-binary>.conf
# - ~/.<name-of-binary>.conf
# - /etc/<name-of-binary>/<name-of-binary>.conf
# - /etc/<name-of-binary>.conf
#
# You can, of course, make symlinks with the name of the binary
# point to one and the same config file used for all binaries.
#
# Alternatively, you can hand over the config file via the command
# line option "--conf-file=<conf-file-name>".
#-----------------------------------------------------------------

# the database connection
[database]
user = your_name
password = your_password
host = your_host
port = 5432
database = gnumed
#options = None
#tty = None


# import related configuration
[import]

# if this file exists database import can proceed,
# eg. frontend work is assumed to be complete
checkpoint = import.ok

# this file must contain patient data in the format
# defined by pat_format
pat_file = patient.dat
# data format for pat_file, currently always "xdt"
pat_format = xdt

# list of base directories, where individual document
# directories are found,
# multiple entries separated by blanks
repositories = ./repository/

# read document metadata from here
description = metadata.xml

# XML tags for document metadata:
# when was the object content created
# (i.e. the date of creation of the health data)
date_tag = obj_date

# what type of content does the document hold
type_tag = obj_type

# a short comment about the document
comment_tag = obj_comment

# an identifier that links physical documents to digital objects
ref_tag = obj_reference

# a long description of the document
# may be a text version of a scanned text
desc_tag = obj_description


# export/viewing related configuration
[export]

# where to look for patient data and store exported results
target = ./export/

# this file must contain patient data in the format
# defined by pat_format
pat_file = patient.dat
# currently always "xdt"
pat_format = xdt
