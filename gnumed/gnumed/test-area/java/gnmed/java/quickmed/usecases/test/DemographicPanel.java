/*
 * DemographicPanel.java
 *
 * Created on 03 April 2003, 14:01
 */

package quickmed.usecases.test;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.*;
import javax.swing.text.JTextComponent ;
import javax.swing.*;
import java.awt.ItemSelectable;
import java.awt.event.ItemListener;

import java.util.logging.*;
import java.util.*;

import org.gnumed.gmIdentity.identity;

/**
 *
 * @author  sjtan
 */
public class DemographicPanel extends javax.swing.JPanel implements DemographicModel {
    ResourceBundle summaryTerms = ResourceBundle.getBundle("SummaryTerms");
    /** Creates new form DemographicPanel */
    public DemographicPanel() {
        initComponents();
        postInit();
        createTestListeners();
    }
    
    void postInit() {
        // internationalized      
        maritalComboBox3.removeAllItems();
       

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        commencedSpinner1 = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        medicareField = new javax.swing.JTextField();
        medicareExpField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        pensionerField = new javax.swing.JTextField();
        pensionerExpField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        healthcareField = new javax.swing.JTextField();
        hccExpField8 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        fundComboBox1 = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        surnameField = new javax.swing.JTextField();
        recordNoField = new javax.swing.JTextField();
        givenNameField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        birthdateSpinner2 = new javax.swing.JSpinner();
        sexComboBox2 = new javax.swing.JComboBox();
        maritalComboBox3 = new javax.swing.JComboBox();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        ABOComboBox4 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        rhesusComboBox5 = new javax.swing.JComboBox();
        addressField = new javax.swing.JTextField();
        postcodeField11 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        countryOfBirthField12 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        ATSICheckBox1 = new javax.swing.JCheckBox();
        ethnicityTextField13 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        nokTextFeld = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        nokContactTextField14 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jobTextField15 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        workPhoneTextField16 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        mobilePhoneTextField17 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        homePhoneTextField18 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        emailTextField20 = new javax.swing.JTextField();

        jLabel16.setText("jLabel16");
        jLabel19.setText("jLabel19");
        jTextField19.setText("jTextField19");

        setLayout(new java.awt.GridBagLayout());

        setName("healthFund");
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setLayout(new java.awt.GridBagLayout());

        commencedSpinner1.setBorder(new javax.swing.border.TitledBorder(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("date_commenced_label")));
        commencedSpinner1.setModel(commencedSpinner1.getModel());
        commencedSpinner1.setName(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("date_commenced_label"));
        commencedSpinner1.setPreferredSize(new java.awt.Dimension(15, 17));
        commencedSpinner1.setModel( new javax.swing.SpinnerDateModel());
        commencedSpinner1.setEditor( new javax.swing.JSpinner.DateEditor(commencedSpinner1, "dd/MM/yyyy"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.ipadx = 110;
        gridBagConstraints.ipady = 27;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(commencedSpinner1, gridBagConstraints);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel1.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("title_health_summary"));
        jLabel1.setPreferredSize(new java.awt.Dimension(15, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jLabel1, gridBagConstraints);

        jPanel1.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("Category_label"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel4.add(jLabel8, gridBagConstraints);

        jLabel3.setDisplayedMnemonic('E');
        jLabel3.setFont(new java.awt.Font("Dialog", 0, 10));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("expiry_date"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = -30;
        jPanel4.add(jLabel3, gridBagConstraints);

        jLabel4.setLabelFor(medicareField);
        jLabel4.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("medicare"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel4, gridBagConstraints);

        medicareField.setFont(new java.awt.Font("Dialog", 0, 10));
        medicareField.setText("jTextField4");
        medicareField.setName("medicare");
        medicareField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicareFieldActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(medicareField, gridBagConstraints);

        medicareExpField.setColumns(1);
        medicareExpField.setFont(new java.awt.Font("Dialog", 0, 10));
        medicareExpField.setText("jTextField1");
        medicareExpField.setInputVerifier(getMonthYearInputVerifier());
        medicareExpField.setName("expMedicare");
        medicareExpField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicareExpFieldActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = -30;
        jPanel4.add(medicareExpField, gridBagConstraints);

        jLabel5.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("pen_dva"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel5, gridBagConstraints);

        pensionerField.setFont(new java.awt.Font("Dialog", 0, 10));
        pensionerField.setText("jTextField6");
        pensionerField.setName("penDva");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        jPanel4.add(pensionerField, gridBagConstraints);

        pensionerExpField.setFont(new java.awt.Font("Dialog", 0, 10));
        pensionerExpField.setText("jTextField2");
        pensionerExpField.setInputVerifier(getMonthYearInputVerifier());
        pensionerExpField.setName("expDVA");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = -30;
        jPanel4.add(pensionerExpField, gridBagConstraints);

        jLabel6.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("health_care_card"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel6, gridBagConstraints);

        healthcareField.setFont(new java.awt.Font("Dialog", 0, 10));
        healthcareField.setText("jTextField7");
        healthcareField.setName("hcc");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        jPanel4.add(healthcareField, gridBagConstraints);

        hccExpField8.setFont(new java.awt.Font("Dialog", 0, 10));
        hccExpField8.setText("jTextField3");
        hccExpField8.setInputVerifier(getMonthYearInputVerifier());
        hccExpField8.setName("expHCC");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = -30;
        jPanel4.add(hccExpField8, gridBagConstraints);

        jLabel7.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("health_fund"));
        jPanel4.add(jLabel7, new java.awt.GridBagConstraints());

        fundComboBox1.setEditable(true);
        fundComboBox1.setFont(new java.awt.Font("Dialog", 0, 10));
        fundComboBox1.setMinimumSize(new java.awt.Dimension(146, 25));
        fundComboBox1.setName("healthFund");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel4.add(fundComboBox1, gridBagConstraints);

        jPanel1.add(jPanel4);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(new javax.swing.border.EmptyBorder(new java.awt.Insets(1, 1, 1, 1)));
        surnameField.setText("jTextField5");
        surnameField.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("surname"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        surnameField.setName("surname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        jPanel5.add(surnameField, gridBagConstraints);

        recordNoField.setText("jTextField8");
        recordNoField.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("record_no"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        recordNoField.setName("recordNumber");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(recordNoField, gridBagConstraints);

        givenNameField.setText("jTextField9");
        givenNameField.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("given_names"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 10)));
        givenNameField.setName("givenName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        jPanel5.add(givenNameField, gridBagConstraints);

        jPanel1.add(jPanel5);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        birthdateSpinner2.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("dob"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10)));
        birthdateSpinner2.setMinimumSize(new java.awt.Dimension(34, 45));
        birthdateSpinner2.setName("dob");
        birthdateSpinner2.setModel( new javax.swing.SpinnerDateModel());
        birthdateSpinner2.setEditor( new javax.swing.JSpinner.DateEditor(birthdateSpinner2, "dd/MM/yyyy"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(birthdateSpinner2, gridBagConstraints);

        sexComboBox2.setFont(new java.awt.Font("Dialog", 1, 10));
        sexComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "male", "female" }));
        sexComboBox2.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("sex"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10)));
        sexComboBox2.setMinimumSize(new java.awt.Dimension(34, 50));
        sexComboBox2.setName("sex");
        sexComboBox2.setPreferredSize(new java.awt.Dimension(73, 40));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(sexComboBox2, gridBagConstraints);

        maritalComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "unknown", "single", "married", "widowed", "divorced", "de facto" }));
        maritalComboBox3.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("marital_status"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10)));
        maritalComboBox3.setMinimumSize(new java.awt.Dimension(34, 50));
        maritalComboBox3.setName("maritalStatus");
        maritalComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maritalComboBox3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(maritalComboBox3, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(new javax.swing.border.TitledBorder(null, "Blood Group", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10)));
        jPanel6.setMinimumSize(new java.awt.Dimension(34, 50));
        jLabel9.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("ABO"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jLabel9, gridBagConstraints);

        ABOComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "A", "B", "AB", "O" }));
        ABOComboBox4.setMinimumSize(new java.awt.Dimension(45, 25));
        ABOComboBox4.setName("abo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(ABOComboBox4, gridBagConstraints);

        jLabel10.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("rhesus"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jLabel10, gridBagConstraints);

        rhesusComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "pos", "neg" }));
        rhesusComboBox5.setMinimumSize(new java.awt.Dimension(51, 25));
        rhesusComboBox5.setName("rh");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(rhesusComboBox5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = -30;
        gridBagConstraints.weightx = 3.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        addressField.setText("jTextField10");
        addressField.setToolTipText("please separate by commas : no,street,suburb,state");
        addressField.setBorder(new javax.swing.border.TitledBorder(null, java.util.ResourceBundle.getBundle("SummaryTerms2").getString("address"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 1, 10)));
        addressField.setMinimumSize(new java.awt.Dimension(34, 50));
        addressField.setName("address");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 8.0;
        jPanel2.add(addressField, gridBagConstraints);

        postcodeField11.setText("jTextField11");
        postcodeField11.setBorder(new javax.swing.border.TitledBorder(null, null, javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 10)));
        postcodeField11.setMinimumSize(new java.awt.Dimension(34, 50));
        postcodeField11.setName("pcode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 0.5;
        jPanel2.add(postcodeField11, gridBagConstraints);

        jLabel11.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("country_of_birth"));
        jPanel2.add(jLabel11, new java.awt.GridBagConstraints());

        countryOfBirthField12.setText("jTextField12");
        countryOfBirthField12.setName("countryBirth");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(countryOfBirthField12, gridBagConstraints);

        jLabel12.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("ethnicity"));
        jPanel7.add(jLabel12);

        ATSICheckBox1.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("atsi"));
        ATSICheckBox1.setName("atsi");
        jPanel7.add(ATSICheckBox1);

        ethnicityTextField13.setText("jTextField13");
        ethnicityTextField13.setName("ethnicity");
        jPanel7.add(ethnicityTextField13);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jPanel7, gridBagConstraints);

        jLabel21.setLabelFor(nokTextFeld);
        jLabel21.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("nok"));
        jPanel2.add(jLabel21, new java.awt.GridBagConstraints());

        nokTextFeld.setText("jTextField21");
        nokTextFeld.setName("nok");
        nokTextFeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nokTextFeldActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel2.add(nokTextFeld, gridBagConstraints);

        jLabel13.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("contact_nok"));
        jPanel2.add(jLabel13, new java.awt.GridBagConstraints());

        nokContactTextField14.setText("jTextField14");
        nokContactTextField14.setName("nokContact");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        jPanel2.add(nokContactTextField14, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel14, gridBagConstraints);

        jobTextField15.setText("jTextField15");
        jobTextField15.setName("occupation");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jobTextField15, gridBagConstraints);

        jLabel15.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("phone_work"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel15, gridBagConstraints);

        workPhoneTextField16.setText("jTextField16");
        workPhoneTextField16.setName("workPhone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel9.add(workPhoneTextField16, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel17, gridBagConstraints);

        mobilePhoneTextField17.setText("jTextField17");
        mobilePhoneTextField17.setName("mobile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 2.0;
        jPanel9.add(mobilePhoneTextField17, gridBagConstraints);

        jLabel18.setText(java.util.ResourceBundle.getBundle("SummaryTerms2").getString("home"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel18, gridBagConstraints);

        homePhoneTextField18.setText("jTextField18");
        homePhoneTextField18.setName("homePhone");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(homePhoneTextField18, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(jLabel20, gridBagConstraints);

        emailTextField20.setText("jTextField20");
        emailTextField20.setName("email");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel9.add(emailTextField20, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel2, gridBagConstraints);

    }//GEN-END:initComponents
    
    private void maritalComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maritalComboBox3ActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_maritalComboBox3ActionPerformed
    
    private void nokTextFeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nokTextFeldActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_nokTextFeldActionPerformed
    
    private void medicareExpFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicareExpFieldActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_medicareExpFieldActionPerformed
    
    private void medicareFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicareFieldActionPerformed
        // Add your handling code here:
    }//GEN-LAST:event_medicareFieldActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ABOComboBox4;
    private javax.swing.JCheckBox ATSICheckBox1;
    private javax.swing.JTextField addressField;
    private javax.swing.JSpinner birthdateSpinner2;
    private javax.swing.JSpinner commencedSpinner1;
    private javax.swing.JTextField countryOfBirthField12;
    private javax.swing.JTextField emailTextField20;
    private javax.swing.JTextField ethnicityTextField13;
    private javax.swing.JComboBox fundComboBox1;
    private javax.swing.JTextField givenNameField;
    private javax.swing.JTextField hccExpField8;
    private javax.swing.JTextField healthcareField;
    private javax.swing.JTextField homePhoneTextField18;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jobTextField15;
    private javax.swing.JComboBox maritalComboBox3;
    private javax.swing.JTextField medicareExpField;
    private javax.swing.JTextField medicareField;
    private javax.swing.JTextField mobilePhoneTextField17;
    private javax.swing.JTextField nokContactTextField14;
    private javax.swing.JTextField nokTextFeld;
    private javax.swing.JTextField pensionerExpField;
    private javax.swing.JTextField pensionerField;
    private javax.swing.JTextField postcodeField11;
    private javax.swing.JTextField recordNoField;
    private javax.swing.JComboBox rhesusComboBox5;
    private javax.swing.JComboBox sexComboBox2;
    private javax.swing.JTextField surnameField;
    private javax.swing.JTextField workPhoneTextField16;
    // End of variables declaration//GEN-END:variables
    static class TestListener implements  PropertyChangeListener {
        
        /** This method gets called when a bound property is changed.
         * @param evt A PropertyChangeEvent object describing the event source
         *   	and the property that has changed.
         *
         */
        public void propertyChange(PropertyChangeEvent evt) {
            synchronized(this) {
                System.out.println("from "+evt.getSource() + " got "+evt.getPropertyName() + " : " + evt.getNewValue());
            }
        }
        
    };
    
    
    
    TestDocumentListener docListener= new TestDocumentListener();
    
    PropertyChangeListener listener = new TestListener();
    
    
    
    static Logger logger;
    static {
        logger = Logger.getLogger("TestDemographics");
        logger.addHandler(new ConsoleHandler());
        logger.setLevel(Level.INFO);
    };
    
    static javax.swing.InputVerifier monthYearInputVerifier;
    
    static {
        monthYearInputVerifier = new MonthYearInputVerifier();
    };
    
    
    DemographicPanel.DemographicModelUpdater updater = new DemographicPanel.DemographicModelUpdater();
    
    /** Holds value of property model. */
    private DemographicModel model;
    
    
    
    
    javax.swing.InputVerifier getMonthYearInputVerifier() {
        return monthYearInputVerifier;
    }
    
    
    
    public void createTestListeners() {
        DemographicIdentityModel demographicModel = new DemographicIdentityModel();
        demographicModel.setIdentity(new identity());
        updater.setDemographicModel(demographicModel);
        demographicModel.setUiModel(this);
        addDocumentListenerToAllTextComponents( updater);
        addChangeListenerToAllJSpinners(updater);
        addItemListenerToAllItemSelectable(updater);
        logger.info("FINISHED ADDING DOCUMENT LISTENERS");
        setModel(demographicModel);
    }
    
    void addDocumentListenerToAllTextComponents( DocumentListener docListener) {
        
        Collection comps = ComponentCollector.collectType(javax.swing.text.JTextComponent.class, this);
        Iterator i = comps.iterator();
        while(i.hasNext()) {
            javax.swing.text.JTextComponent comp = (javax.swing.text.JTextComponent ) i.next();
            
            javax.swing.text.Document doc = comp.getDocument();
            doc.addDocumentListener(docListener);
            doc.putProperty(doc.TitleProperty, comp.getName());
            logger.log(Level.INFO, "associated " + docListener +" to "+doc + "of "+comp);
            
        }
        
    }
    void addChangeListenerToAllJSpinners( ChangeListener listener) {
        Collection comps = ComponentCollector.collectType(javax.swing.JSpinner.class, this);
        Iterator i = comps.iterator();
        while(i.hasNext()) {
            JSpinner spinner = (JSpinner) i.next();
            spinner.getModel().addChangeListener(listener);
        }
        
    }
    
    void  addItemListenerToAllItemSelectable( ItemListener listener) {
        Collection comps = ComponentCollector.collectType(java.awt.ItemSelectable.class, this);
        Iterator i = comps.iterator();
        while(i.hasNext()) {
            ItemSelectable s = (ItemSelectable) i.next();
            s.addItemListener(listener);
        }
        
    }
    
    public String getAddress() {
        return addressField.getText();
    }
    
    public Object getBirthdate() {
        return  birthdateSpinner2.getValue();
    }
    
    public Object getCommenced() {
        return   commencedSpinner1.getValue();
    }
    
    public String getCountryOfBirth() {
        return   countryOfBirthField12.getText();
    }
    
    public String getFirstNames() {
        return  givenNameField.getText();
    }
    
    public String getHomeTelephone() {
        return homePhoneTextField18.getText();
    }
    
    public String getLastNames() {
        return surnameField.getText();
    }
    
    public String getMedicare() {
        return medicareField.getText();
    }
    
    public String getMedicareExpiry() {
        return medicareExpField.getText();
    }
    
    public String getMobilePhone() {
        return mobilePhoneTextField17.getText();
    }
    
    public String getNokPhone() {
        return nokContactTextField14.getText();
    }
    
    public String getPensioner() {
        return pensionerField.getText();
    }
    
    public String getPensionerExpiry() {
        return pensionerExpField.getText();
    }
    
    public String getPostcode() {
        return postcodeField11.getText();
    }
    
    public String getRecordNo() {
        return recordNoField.getText().trim();
    }
    
    public String getSex() {
        return sexComboBox2.getSelectedItem().toString();
    }
    
    public String getWorkTelephone() {
        return workPhoneTextField16.getText();
    }
    
    public void setAddress(String address) {
        addressField.setText(address);
    }
    
    public void setBirthdate(Object birthdate) {
        birthdateSpinner2.setValue(birthdate);
    }
    
    public void setCommenced(Object commenced) {
        commencedSpinner1.setValue(commenced);
    }
    
    public void setCountryOfBirth(String countryOfBirth) {
        countryOfBirthField12.setText( countryOfBirth);
    }
    
    public void setFirstNames(String firstNames) {
        givenNameField.setText(firstNames);
    }
    
    public void setHomeTelephone(String homeTelephone) {
        homePhoneTextField18.setText(homeTelephone);
    }
    
    public void setLastNames(String lastNames) {
        surnameField.setText(lastNames);
    }
    
    public void setMedicare(String medicare) {
        medicareField.setText(medicare);
    }
    
    public void setMedicareExpiry(String medicareExpiry) {
        medicareExpField.setText(medicareExpiry);
    }
    
    public void setMobilePhone(String mobilePhone) {
        mobilePhoneTextField17.setText(mobilePhone);
    }
    
    public void setNokPhone(String nokPhone) {
        nokContactTextField14.setText(nokPhone);
    }
    
    public void setPensioner(String pensioner) {
        pensionerField.setText(pensioner );
    }
    
    public void setPensionerExpiry(String pensionerExpiry) {
        
        pensionerExpField.setText(pensionerExpiry);
    }
    
    public void setPostcode(String postcode) {
        postcodeField11.setText(postcode);
    }
    
    public void setRecordNo(String recordNo) {
        recordNoField.setText(recordNo);
    }
    
    public void setSex(String sex) {
        sexComboBox2.setSelectedItem(sex);
    }
    
    public void setWorkTelephone(String workTelephone) {
        workPhoneTextField16.setText(workTelephone);
    }
    
    public Object getMaritalStatus() {
        return maritalComboBox3.getSelectedItem();
    }
    
    public void setMaritalStatus(Object maritalStatus){
         maritalComboBox3.setSelectedItem(maritalStatus);
    }
    
    /** Getter for property identity.
     * @return Value of property identity.
     *
     */
    public identity getIdentity() {
        return ((DemographicIdentityModel)getModel()).getIdentity();
    }
    
    /** Setter for property identity.
     * @param identity New value of property identity.
     *
     */
    public void setIdentity(identity identity) {
        ((DemographicIdentityModel)getModel()).setIdentity(identity);
    }
    
    /** Getter for property model.
     * @return Value of property model.
     *
     */
    public DemographicModel getModel() {
        return this.model;
    }
    
    /** Setter for property model.
     * @param model New value of property model.
     *
     */
    public void setModel(DemographicModel model) {
        this.model = model;
        maritalComboBox3.removeAllItems();
        maritalComboBox3.setModel(new DefaultComboBoxModel(model.getMaritalList()));
    }
    
    void transferTextDocumentsToModel() {
        java.util.Collection comps = ComponentCollector.collectType(javax.swing.text.JTextComponent.class, this);
        java.util.Iterator i = comps.iterator();
        while(i.hasNext()) {
            JTextComponent comp  = (JTextComponent)i.next();
            updater.setText(comp.getDocument());
        }
    }
    
    void transferItemSelectableValuesToModel() {
        
        java.util.Collection comps = ComponentCollector.collectType(ItemSelectable.class, this);
        java.util.Iterator j = comps.iterator();
        while(j.hasNext()) {
            updater.setText((ItemSelectable) j.next() );
        }
    }
    
    /**
     * transfers text document values and item selectable (combobox) values from DemographicPanel
     * to model interface DemographicModel.
     */
    public void transferFormToModel() {
        transferTextDocumentsToModel();
        transferItemSelectableValuesToModel();
    }
    
    public Object[] getMaritalList() {
        if (getModel()!=null)
        return getModel().getMaritalList();
        return new Object[0];
    }    
    
    /**
     *a class that implements component listeners for transfering component changes to model
     */
    class DemographicModelUpdater implements javax.swing.event.DocumentListener, ChangeListener, ItemListener {
        
        /** Holds value of property demographicModel. */
        private DemographicModel demographicModel;
        
        
        void setText( Object from) {
            try {
                logger.info("Received change from " + from);
                if (from == commencedSpinner1.getModel()) //date commenced
                    demographicModel.setCommenced(getCommenced());
                if (from == birthdateSpinner2.getModel()) {
                    logger.info("**** SET BIRTHDATE MODEL");
                    demographicModel.setBirthdate(getBirthdate());
                }
                if (from == surnameField.getDocument())
                    demographicModel.setLastNames(getLastNames());
                if (from == givenNameField.getDocument())
                    demographicModel.setFirstNames(getFirstNames());
                if (from == sexComboBox2)
                    demographicModel.setSex(getSex());
                if (from == maritalComboBox3) 
                    getModel().setMaritalStatus(getMaritalStatus());
                
                if (from == addressField.getDocument()) {
                    //                String [] parts = addressField.getText().split("\\s*,\\s*");
                    demographicModel.setAddress(getAddress());
                }
                if ( from == postcodeField11.getDocument()) {
                    demographicModel.setPostcode(getPostcode());
                }
                if (from == homePhoneTextField18.getDocument()) {
                    demographicModel.setHomeTelephone(getHomeTelephone());
                }
                if ( from == workPhoneTextField16.getDocument())
                    demographicModel.setWorkTelephone(getWorkTelephone());
                if ( from == mobilePhoneTextField17.getDocument() )
                    demographicModel.setMobilePhone( getMobilePhone());
                if (from == medicareExpField.getDocument())
                    demographicModel.setMedicareExpiry(getMedicareExpiry());
                if (from == medicareField.getDocument())
                    demographicModel.setMedicare(getMedicare());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        
        public void changedUpdate(DocumentEvent e) {
            setText( e.getDocument());
        }
        
        public void insertUpdate(DocumentEvent e) {
            setText(e.getDocument());
        }
        
        public void removeUpdate(DocumentEvent e) {
            setText(e.getDocument());
        }
        
        /** Getter for property demographicModel.
         * @return Value of property demographicModel.
         *
         */
        public DemographicModel getDemographicModel() {
            return this.demographicModel;
        }
        
        /** Setter for property demographicModel.
         * @param demographicModel New value of property demographicModel.
         *
         */
        public void setDemographicModel(DemographicModel demographicModel) {
            this.demographicModel = demographicModel;
        }
        
        public void stateChanged(ChangeEvent e) {
            
            logger.info(this.toString() + " detected change in " + e.getSource().toString());
            setText(e.getSource());
        }
        
        public void itemStateChanged(java.awt.event.ItemEvent e) {
            setText( e.getItemSelectable());
        }
        
    }
    
}
