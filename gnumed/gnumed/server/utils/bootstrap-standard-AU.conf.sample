# GnuMed database system bootstrapping config file
#-------------------------------------------------
# license: GPL
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/server/utils/Attic/bootstrap-standard-AU.conf.sample,v $
version = $Revision: 1.2 $

#----------------------------------
[installation]

interactive = yes

description = $description$
This will set up a standard monolithic test system for GnuMed
that is immediately useable. It will contain patient demographics,
clinical tables, Australian postcodes and some sample data.

There's also some test accounts included for access to the
database. Please refer to server/sql/gmTestAccounts.sql to
learn more about those. YOU MUST make sure to remove them
prior to going life on a production system because they
currently apply to ALL databases.

The database name will be "gnumed" which is expected
to NOT exist prior to running this script.
$description$

services = $services$
config
demographics
clinical
$services$

language library dirs = $language library dirs$
/usr/lib/postgresql/lib/
/usr/lib/pgsql/
/usr/local/pgsql/lib
$language library dirs$

#----------------------------------
# these really shouldn't be changed
[GnuMed defaults]

database owner alias = GnuMed owner

groups = $groups$
gm-doctors
_gm-doctors
gm-staff_medical
_gm-staff_medical
gm-staff_office
_gm-staff_office
gm-trainees_medical
gm-trainees_office
gm-public
$groups$

procedural languages = $procedural languages$
pg/SQL
$procedural languages$

#----------------------------------
# services
#----------------------------------
[service config]
name = default
version = 0.1
database alias = core
postgres version = 7.1
registration database = core
schema = $schema$
sql/gmconfiguration.sql
sql/gmServices.sql
$schema$

[service demographics]
name = personalia
version = 0.1
database alias = core
postgres version = 7.1
registration database = core
schema = $schema$
sql/gmidentity.sql
sql/gmgis.sql
sql/country.specific/au/postcodes.au.sql
$schema$

[service clinical]
name = historica
version = 0.1
database alias = core
postgres version = 7.1
registration database = core
schema = $schema$
sql/gmclinical.sql
$schema$

#----------------------------------
# databases
#----------------------------------
[database core]
name = gnumed
server alias = localhost

#----------------------------------
# servers
#----------------------------------
[server localhost]
name = localhost
port = 5432
template database = template1
super user alias = postgres
schema = $schema$
sql/gmTestAccounts.sql
$schema$

#----------------------------------
# users
#----------------------------------
[user GnuMed owner]
name = gm-dbowner
#password = 

[user postgres]
name = postgres
#password =

#----------------------------------
# languages
#----------------------------------
[pg/SQL]
library name = plpgsql.so

call handler = $call handler$
CREATE FUNCTION plpgsql_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpgsql' HANDLER plpgsql_call_handler LANCOMPILER 'PL/pgSQL';
$language activation$

#----------------------------------
[pg/Python]
library name = plpython.so

call handler = $call handler$
CREATE FUNCTION plpython_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpython' HANDLER plpython_call_handler;
$language activation$

#----------------------------------
# $Log: bootstrap-standard-AU.conf.sample,v $
# Revision 1.2  2003-02-13 17:23:31  ncq
# - tailored description string to reflect purpose
#
# Revision 1.1  2003/02/13 17:20:59  ncq
# - config file geared towards Australian GnuMed installations
#
