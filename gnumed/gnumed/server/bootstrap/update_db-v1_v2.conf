# GNUmed database system bootstrapping config file
#-------------------------------------------------
# license: GPL
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/server/bootstrap/Attic/update_db-v1_v2.conf,v $
version = $Revision: 1.1 $

#----------------------------------
[installation]
interactive = yes

keep temp files = yes

description = $description$
This will update an existing GNUmed version 1
database to the version 2 schema. It does not do
any harm to the data contained within.

A copy is made of the existing database. That copy is
then modified. The original database remains unchanged.
$description$

services = $services$
update
$services$

#----------------------------------
[service update]
name = default
version = 0.1
database alias = core
minimum postgresql version = 7.3
registration database = core
schema base directory = ../sql/
schema = $schema$
update_db-v1_v2.sql
gmDemographics-Person-views.sql
gmDemographics-GIS-views.sql
gmDemographics-Org-views.sql
gmClinicalViews.sql
gmBlobViews.sql
gmCrossDB_FK-views.sql
$schema$

#----------------------------------
[database core]
name = gnumed_v2
override name by = GM_CORE_DB
template database = gnumed_v1
server alias = local host
audit disable = 0
audit trail parent table = audit_trail
audit trail table prefix = log_
audit fields table = audit_fields
schema base directory = ../sql/
schema = $schema$
$schema$

#----------------------------------
[server local host]
name = localhost 
port = 5432
template database = template1
super user alias = postgres
procedural language library check = yes
schema base directory = ../sql/
schema = $schema$
$schema$

#----------------------------------
[user GnuMed owner]
name = gm-dbo
#password = 

[user postgres]
name = postgres
password = blank

#----------------------------------
# these really shouldn't be changed
#----------------------------------
[GnuMed defaults]

database owner alias = GnuMed owner

groups = $groups$
$groups$

procedural languages = $procedural languages$
$procedural languages$

language library dirs = $language library dirs$
$language library dirs$

#----------------------------------
# don't ask, this is deep magic ;-)
# meditate over it and enlightenment will be thyne
[pg/SQL]
library name = plpgsql.so
library dir = 

call handler = $call handler$
CREATE FUNCTION plpgsql_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpgsql' HANDLER plpgsql_call_handler LANCOMPILER 'PL/pgSQL';
$language activation$

#----------------------------------
# $Log: update_db-v1_v2.conf,v $
# Revision 1.1  2005-09-13 11:54:00  ncq
# - support for *updating* a v1 database to v2, non-destructively :-)
#
#
