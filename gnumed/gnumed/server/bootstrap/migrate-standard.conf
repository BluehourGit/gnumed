# GnuMed database system bootstrapping config file
#-------------------------------------------------
# license: GPL
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/server/bootstrap/Attic/migrate-standard.conf,v $
version = $Revision: 1.16 $

#----------------------------------
[installation]

interactive = yes

description = $description$
This will set up a standard monolithic test system for GnuMed
that is void of any data. It is intended for migrating data
from older databases. Hence it is, by definition, language
independant.

The database name will be "gnumed-new" which is expected
to not exist prior to running this script.
$description$

services = $services$
config
demographics
clinical
$services$

#----------------------------------
# services
#----------------------------------
[service config]
name = default
version = 0.1
database alias = core
postgres version = 7.1
registration database = core
schema base directory = ../sql/
schema = $schema$
gmconfiguration.sql
$schema$

[service demographics]
name = personalia
version = 0.1
database alias = core
postgres version = 7.1
registration database = core
schema base directory = ../sql/
schema = $schema$
gmDemographics.sql
gmDemographics-Person-views.sql
gmDemographics-GIS-views.sql
$schema$

[service clinical]
name = historica
version = 0.1
database alias = core
postgres version = 7.1
registration database = core
schema base directory = ../sql/
schema = $schema$
gmclinical.sql
gmMeasurements.sql
gmClinicalViews.sql
$schema$

#----------------------------------
# databases
#----------------------------------
[database core]
name = gnumed-new
server alias = local host
audit disable = 0
audit trail parent table = audit_trail
audit trail table prefix = log_
audit fields table = audit_fields
scoring disable = 0
scoring table prefix = score_
scoring fields table = scoring_fields
schema base directory = ../sql/
schema = $schema$
gmSchemaRevision.sql
gmServices.sql
gmI18N.sql
gmAudit.sql
gmCrossDB_FKs.sql
gmCrossDB_FK-views.sql
gmScoring.sql
$schema$

#----------------------------------
# servers
#----------------------------------
[server local host]
name = 127.0.0.1
port = 5432
template database = template1
super user alias = postgres
procedural language library check = yes
schema = $schema$
$schema$

#----------------------------------
# users
#----------------------------------
[user GnuMed owner]
name = gm-dbowner
#password = 

[user postgres]
name = postgres
#password =

#----------------------------------
# these really shouldn't be changed
#----------------------------------
[GnuMed defaults]

database owner alias = GnuMed owner

groups = $groups$
gm-doctors
_gm-doctors
gm-staff_medical
_gm-staff_medical
gm-staff_office
_gm-staff_office
gm-trainees_medical
gm-trainees_office
gm-public
$groups$

procedural languages = $procedural languages$
pg/SQL
$procedural languages$

language library dirs = $language library dirs$
/usr/lib/postgresql/
/usr/lib/postgresql/lib/
/usr/lib/pgsql/
/usr/local/pgsql/lib
$language library dirs$

#----------------------------------
# languages
#----------------------------------
[pg/SQL]
library name = plpgsql.so
library dir = 

call handler = $call handler$
CREATE FUNCTION plpgsql_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpgsql' HANDLER plpgsql_call_handler LANCOMPILER 'PL/pgSQL';
$language activation$

#----------------------------------
[pg/Python]
library name = plpython.so
library dir = 

call handler = $call handler$
CREATE FUNCTION plpython_call_handler () RETURNS OPAQUE AS '%s' LANGUAGE 'C';
$call handler$

language activation = $language activation$
CREATE TRUSTED PROCEDURAL LANGUAGE 'plpython' HANDLER plpython_call_handler;
$language activation$

#----------------------------------
# $Log: migrate-standard.conf,v $
# Revision 1.16  2003-11-02 12:48:55  ncq
# - add schema base directory option to config files
# - hence we don't need the sql link anymore
#
# Revision 1.15  2003/10/19 12:57:19  ncq
# - add scoring schema generator and use it
#
# Revision 1.14  2003/10/01 15:59:20  ncq
# - remove now-obsolete audit_mark defines
#
# Revision 1.13  2003/08/26 14:11:13  ncq
# - add option to disable checking for proc lang library files on remote machines
#
# Revision 1.12  2003/08/26 13:05:04  ncq
# - add "audit disable" flag
#
# Revision 1.11  2003/08/17 18:06:36  ncq
# - add x_db_fk views
#
# Revision 1.10  2003/08/17 00:06:37  ncq
# - add def for audit fields table
#
# Revision 1.9  2003/08/03 14:04:10  ncq
# - import measurements before views now
#
# Revision 1.8  2003/08/02 14:33:48  ncq
# - adapted to gmDemographics*.sql
#
# Revision 1.7  2003/07/27 21:45:16  ncq
# - add gmMeasurements and gmCrossDB_FKs
#
# Revision 1.6  2003/05/22 12:53:41  ncq
# - add automatic audit trail generation
# - add options for that
#
# Revision 1.5  2003/05/14 07:29:55  ncq
# - add gmAudit.sql to database level schema
#
# Revision 1.4  2003/05/12 12:47:25  ncq
# - import some schema files at the database level, too
# - add corresponding schema list in the config files
#
# Revision 1.3  2003/04/28 20:47:15  ncq
# - factored out gmClinicalViews.sql
#
# Revision 1.2  2003/04/18 13:21:16  ncq
# - include new script gmIdentityViews.sql
#
# Revision 1.1  2003/03/30 22:18:53  ncq
# - renamed after discussion with native speaker :-)
#
# Revision 1.3  2003/03/30 20:57:37  ncq
# - make localhost be 127.0.0.1 as Mandrake happens to want to rename that to the local hostname :-)
#
# Revision 1.2  2003/03/26 15:47:54  ncq
# - alas, some distros store procedural language libraries in /usr/lib/postgresql/
#
# Revision 1.1  2003/02/25 08:26:49  ncq
# - moved here from server/utils/
#
# Revision 1.2  2003/02/23 19:13:08  ncq
# - move language library dirs to [GnuMed defaults] and that to
#   the bottom of the file as per suggestion by Andreas
#
# Revision 1.1  2003/02/14 12:18:52  ncq
# - for migration, *no* data imported
#
