# GNUmed database system bootstrapping config file
#-------------------------------------------------
# license: GPL
# author: Karsten Hilbert@gmx.net

#----------------------------------
[revision control]
file = $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/server/bootstrap/update_db-v14_v15.conf,v $
version = $Revision: 1.1 $

#----------------------------------
[installation]
interactive = yes

keep temp files = no

description = $description$
This will update an existing GNUmed version 14
database to the version 14 schema. It does not do
any harm to the data contained within.

The existing database will be cloned first. The copy is
then modified. The original database remains unchanged.
$description$

#v14_fixups-pre_v15
#v15-test_data

bundles = $bundles$
v14-v15-static
v14-v15-dynamic
$bundles$

#----------------------------------
[bundle v14_fixups-pre_v15]
database alias = gnumed_v15
minimum postgresql version = 8.3
schema base directory = ../sql/v14-v15/fixups/
schema = $schema$
$schema$

#----------------------------------
[bundle v14-v15-static]
database alias = gnumed_v15
minimum postgresql version = 8.4
schema base directory = ../sql/v14-v15/static/
schema = $schema$
v15-clin-test_result-static.sql
v15-clin-incoming_data_unmatched-static.sql
$schema$

#----------------------------------
[bundle v14-v15-dynamic]
database alias = gnumed_v15
minimum postgresql version = 8.4
schema base directory = ../sql/v14-v15/dynamic/
schema = $schema$
v15-i18n-dynamic.sql
v15-clin-test_result-dynamic.sql
v15-clin-incoming_data_unmatched-dynamic.sql
$schema$

#----------------------------------
[bundle v15-test_data]
database alias = gnumed_v15
minimum postgresql version = 8.4
schema base directory = ../sql/test-data/
schema = $schema$
$schema$

#----------------------------------
[database gnumed_v15]
name = gnumed_v15
override name by = GM_CORE_DB
drop target database = 1
target version = devel
#target version = v15
transfer users = 1
template database = gnumed_v14
template version = v14
server alias = local host
notification disable = 0
audit disable = 0
audit trail parent table = audit.audit_trail
audit trail table prefix = log_
audit fields table = audit.audit_fields
schema base directory = ../sql/v14-v15/
schema = $schema$
$schema$

superuser schema = $superuser schema$
$superuser schema$

script base directory = ../sql/v14-v15/python/
data import scripts = $data import scripts$
$data import scripts$

upgrade plausibility checks = $upgrade plausibility checks$
identities::::select count(1) from dem.identity
  select count(1) from dem.identity
names::::select count(1) from dem.names
  select count(1) from dem.names
addresses::::select count(1) from dem.address
  select count(1) from dem.address
episodes::::select count(1) from clin.episode
  select count(1) from clin.episode
encounters::::select count(1) from clin.encounter
  select count(1) from clin.v_pat_encounters
issues::::select count(1) from clin.health_issue
  select count(1) from clin.health_issue
documents::::select count(1) from blobs.doc_med
  select count(1) from blobs.doc_med
document pages::::select count(1) from blobs.doc_obj
  select count(1) from blobs.doc_obj
allergies::::select count(1) from clin.allergy
  select count(1) from clin.allergy
clinical items::::select count(1) from clin.clin_root_item
  select count(1) from clin.clin_root_item
communication channels::::select count(1) from dem.lnk_identity2comm
  select count(1) from dem.lnk_identity2comm
test results::::select count(1) from clin.test_result
  select count(1) from clin.test_result
unmatched test results::::select count(1) from clin.incoming_data_unmatched
  select count(1) from clin.incoming_data_unmatched
unmatchable test results::::select count(1) from clin.incoming_data_unmatchable
  select count(1) from clin.incoming_data_unmatchable
denormalized test results::::select count(1) from clin.v_test_results
  select count(1) from clin.v_test_results
allergy states::::select count(1) from clin.allergy_state
  select count(1) from clin.allergy_state
waiting list entries::::select count(1) from clin.waiting_list
  select count(1) from clin.waiting_list
generic codes::::select count(1) from ref.coding_system_root
  select count(1) from ref.coding_system_root
data sources::::select count(1) from ref.data_source
  select count(1) from ref.data_source
messages::::select count(1) from dem.message_inbox
	select count(1) from dem.message_inbox
operations::::select count(1) from clin.operation
	select count(1) from clin.operation
test orgs::::select count(1) from clin.test_org
	select count(1) from clin.test_org
branded drugs::::select count(1) from ref.branded_drug
	select count(1) from ref.branded_drug
branded drugs (external code)::::select count(1) from ref.branded_drug where external_code is not null
	select count(1) from ref.branded_drug where external_code is not null
branded drugs (external code type)::::select count(1) from ref.branded_drug where external_code is not null
	select count(1) from ref.branded_drug where external_code_type is not null
vaccines::::select count(1) from clin.vaccine
	select count(1) from clin.vaccine
vaccines (must have indications)::::select 0
	select count(1) from clin.v_vaccines where indications is NULL
vaccinations::::select count(1) from clin.vaccination
	select count(1) from clin.vaccination
requests on results::::select count(1) from clin.lnk_result2lab_req
	select count(1) from clin.test_result where fk_request is not NULL
$upgrade plausibility checks$

#----------------------------------
[server local host]
name = 
port = 5432
template database = template1
super user alias = postgres
schema base directory = ../sql/v14-v15/
schema = $schema$
$schema$

#----------------------------------
[user GNUmed owner]
name = gm-dbo
password = 

[user postgres]
name = postgres
#password =

#----------------------------------
# these really shouldn't be changed
#----------------------------------
[GnuMed defaults]

database owner alias = GNUmed owner

groups = $groups$
$groups$

#----------------------------------
