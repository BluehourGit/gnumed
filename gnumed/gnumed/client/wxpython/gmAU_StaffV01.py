#!/usr/bin/env python
# -*- coding: ISO-8859-1 -*-
# generated by wxGlade 0.4cvs on Wed Jan 18 00:29:04 2006

import wx
import Gnumed.pycommon.gmPG as gmPG
from  Gnumed.wxGladeWidgets import wxgAU_StaffV01

class cAU_StaffV01(wxgAU_StaffV01.cAU_StaffV01):
    def __init__(self, *args, **kwds):
    	wxgAU_StaffV01.cAU_StaffV01.__init__(self, *args, **kwds)
	self.fill_role_combo()

    def fill_role_combo(self):
	result = gmPG.run_ro_query("historica", "select name from dem.staff_role")
	if result:
		for r in result:
			self.combo_box_1.Append( r[0])
			


    def create_staff(self, event): # wxGlade: cAU_StaffV01.<event_handler>
    	
	self.role  = self.combo_box_1.GetValue()
	self.sign = self.text_ctrl_4.GetValue()
	self.comment = self.text_ctrl_5.GetValue()
	
	
	if self.GetParent().IsModal():
		self.GetParent().EndModal(wx.ID_OK)
	
        #print "Event handler `create_staff' not implemented"
        event.Skip()


    def cancel_staff_creation(self, event): # wxGlade: cAU_StaffV01.<event_handler>
        #print "Event handler `cancel_staff_creation' not implemented"
        event.Skip()
	if self.GetParent().IsModal():
	                 self.GetParent().EndModal(wx.ID_CANCEL)


    def set_data( self, person, pg_username, pg_groups):
        for widg, val in zip ( [ self.text_ctrl_1, self.text_ctrl_2, self.text_ctrl_3 ], [ person.get_identity().get_description(), pg_username, pg_groups] ):
		widg.SetValue(val)
	
	self.person = person
	self.pg_user = pg_username

    def set_staff_data( self, role, sign, comment):
   	self.combo_box_1.SetValue(role)
	self.text_ctrl_4.SetValue(sign)
	self.text_ctrl_5.SetValue(comment)

	
# end of class cAU_StaffV01


