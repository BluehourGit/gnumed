Forms backend
-------------

A forms backend is required for prescription, as well as referrals.

Proposed XML definition:

<form>
<name>Example form</form>
<type>SCRIPT</type> -- currently "SCRIPT" or "REFERRAL"
<date>6/8/2003</date> -- date form comes into use
  <page>
    <field>
      <x>320</x><y>568</y> -- position from top left-hand, in 1/72 inch ("Postscript units"
      <width>400</width> -- maximum width of this field
      <font>SWISS</font> -- fonts, after the standard fonts defined in wxWindows
      <size>12</size> -- font size, in points
      <name>PATIENT_NAME</name> -- the actual field
    </field>
    -.... any number of field sections
  </page> -- multiple pages are allowed

<value> -- do not exist for "template" form files, hold data when saved in backend
  <field>PATIENT_NAME</field>
  <data>Ian Haywood</data>
</value>
</form>

Forms can define positions for a pre-defined list of fields, depending on their type (script or referral (request))

Common to both: PATIENT_NAME, PATIENT_NUMBER, PATIENT_ADDRESS, DOCTOR_NAME, DOCTOR_NUMBER

For scripts: DRUGS (forms engine must honour \n in a sensible way)

For referrals: INVESTIGATION, CLINICAL_NOTES

Future
------

Forms can define their own variables in a separate <new_field> section which gives clues 
to how fields are presented in the GUI (text box, spin control, pick list, &c)
True/false variables, on GUI as a tick box, can draw actual tick symbol on paper maybe

"Fixed_text" elements under "page" for fixed-text printed on every form (for Richard's "super-form")

---------------------------------------------------------
High level goals (design concepts) for this project are:

1) There's an immeasurable flood of forms. Hence it is
   essential to allow for relatively easy addition of forms by
   sophisticated users and easy download/integration of added
   forms by "normal" users.

2) Forms most of the time duplicate information. It must be
   easy to reuse existing data.

3) Some forms need rapid printing (prescriptions, referrals,
   etc) while others can be printed at slower speeds. Thus
   text mode and graphics mode for printing appear necessary.

4) Once printed a form should be stored forever. It must be
   possible to redisplay the form at any time in the future.
   It is very desirable to reuse the form for filling in new
   form instances or reprinting the old one. This also means
   form definitions should never ever disappear from a GnuMed
   system. They should only become obsolete/invisible but
   should never be deleted.

5) There are several different possible targets for the
   content of a form: fax, email, paper, smartcard, ...  Thus
   it seems advantageous to have an intermediate format.
   Whether that is XML or database tables matters little, I
   guess.

I can discuss a million little details but those are better left
for discussion during implementation. Primarily we should
probably focus on getting on paper: a) a prescription, b) a
referral form, c) a work certificate (for when you are sick
and shouldn't go to work).

It is extremely helpful to get friendly with an interested
local doctor to go back and ask for clarification on domain
specific things but this is not an _absolute_ necessity.

In case you happen to understand German there's a rather
comprehensive requirements document at

http://resmedicinae.sourceforge.net/model/analysis/analysis_de.txt
--------------------------------------------------------
