# $Source: /home/ncq/Projekte/cvs2git/vcs-mirror/gnumed/gnumed/client/doc/TODO/Attic/user-manual.txt,v $
# $Revision: 1.37 $
---------------------------------------------------
Rules:
------
- add material for the User Manual in this text file if you
  don't want to edit the sgml code yourself
- leave behind an email address
- delete things if you incorporated them into the manual
- please date it.
Thanks
---------------------------------------------------
Please incorporate this into the manual:


<!DOCTYPE BOOK PUBLIC "-//OASIS//DTD DocBook V3.1//EN">
<BOOK>
<ARTICLE> <!-- Begin of Article -->
<PARA>Instructions for gnumed installation on a RedHat 8.0 system</PARA>
<PARA>&lt;chapter id=1&gt;</PARA>
<PARA>                       &lt;title&gt;Header&lt;/title&gt;</PARA>
<PARA>&lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;Author&lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt; Yudhvir Singh Sidhu, <ULINK URL="mailto:Yudhvir@hawaii.edu">Yudhvir@hawaii.edu</ULINK> &lt;/para&gt;</PARA>
<PARA>&lt;/sect1&gt;</PARA>
<PARA>&lt;sect2&gt;</PARA>
<PARA>                      &lt;title&gt;Date Created &lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt; 4 Nov 03&lt;/para&gt;</PARA>
<PARA>&lt;/sect2&gt;</PARA>
<PARA>&lt;sect3&gt;</PARA>
<PARA>                      &lt;title&gt;Modified by &lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt; Yudhvir&lt;/para&gt;</PARA>
<PARA>&lt;/sect3&gt;</PARA>
<PARA>&lt;sect4&gt;</PARA>
<PARA>                      &lt;title&gt;Modified on &lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt; 6 Nov 03&lt;/para&gt;</PARA>
<PARA>&lt;/sect4&gt;</PARA>
<PARA>&lt;sect5&gt;</PARA>
<PARA>                      &lt;title&gt;What I did &lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt; Moved pypgSQL to client side and added stuff on how to drop a database.      &lt;/para&gt;</PARA>
<PARA>&lt;/sect5&gt;</PARA>
<PARA>&lt;sect6&gt;</PARA>
<PARA>                      &lt;title&gt;Disclaimer&lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt; No guarantees if these instructions will work or cause any damage.       </PARA>
<PARA>                     &lt;/para&gt;</PARA>
<PARA>&lt;/sect6&gt;</PARA>
<PARA>&lt;sect7&gt;</PARA>
<PARA>                      &lt;title&gt;Help &lt;/title&gt;</PARA>
<PARA>                      &lt;para&gt;Refinement is needed, so please send me your suggestions. I'll make changes and send it to the listserv. Since I do not have any other Linux flavor, I am limited to RedHat. </PARA>
<PARA>                     &lt;/para&gt;</PARA>
<PARA>&lt;/sect7&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA>&lt;chapter id=2&gt;</PARA>
<PARA>        &lt;title&gt;Introduction&lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;General&lt;/title&gt;</PARA>
<PARA>                         &lt;para&gt;</PARA>
<PARA>I divided gnumed installation in two parts: client-only and client + server. The division is important because the client install is relatively easier and you can use it to connect to a remote database and play with the screens. As you can tell, the database part is being called the server. Both installs require cvs download of the module "gnumed."</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA></PARA>
<PARA>&lt;chapter id=3&gt;</PARA>
<PARA>        &lt;title&gt;1. Preparation&lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;Notes&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>Download these files. If you have the RH 8.0 set of 5 cds, many of these files are on cds under the RPM directory. Get them together first, the order in which they are installed is important. I'll list that later.</PARA>
<PARA></PARA>
<PARA>&lt;emphasis&gt;NOTE:  RedHat's GUI rpm "Package" GUI utility works and is simpler to use than the command line because it figures out dependencies and installs them also. However, it sometimes hangs. Maybe "hangs" is not the right description, it hides so you don't see it on your screen and won't let you install the rpm package. You have to logout and log back in or kill the process.</PARA>
<PARA></PARA>
<PARA>NOTE:  It is important that you get the right versions of all these rpms that match your RedHat release. gnumed.org's cvs download directories show which versions belong to which RedHat release.&lt;/emphasis&gt;</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>   &lt;sect2&gt;</PARA>
<PARA>                       &lt;title&gt;1.1 Prepare for Client&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>a.  Python Scripting Language from python.org, version 2.2. I used version 2.2.1 installed via the Red Hat "Packages" GUI under "System Settings." The GUI prompts you to put in the right cd, so you don't have to know which one the software is on. gnumed.org reminds us to "Don't forget to include the Python interface libraries." I have no idea what rpm these files are in or what their names are, but apparently they are loaded as part of the python package by the GUI install of python.</PARA>
<PARA></PARA>
<PARA>b.  GTK libraries from gtk.org, version 1.2, If you have a Gnome windows manager, you probably have these libraries installed. Please keep in mind that KDE uses QT instead of GTK. So, if you have a KDE-only setup, you will have to install these from the rpms on cd or the net. My RedHat setup includes both KDE and GNOME - so I did not have to install these.</PARA>
<PARA></PARA>
<PARA>c.  mx extension libraries from mx, no version given from lemburg.com/files/python/eGenix-mx-Extensions.html . I used egenix-mx-base-2.0.5-py2.2_1.i386.rpm. RedHat 8.0 cd contains the mx-2.0.3-6.i386.rpm.</PARA>
<PARA></PARA>
<PARA>d.  wxWindows windowing library from wxwindows web site, version 2.4. I used wxGTK-static-2.4.2-1.i386.rpm</PARA>
<PARA></PARA>
<PARA>e.  wxPython from wxpython.org, version 2.4. I used wxPythonGTK-py2.2-2.4.2.4-1.i386.rpm</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect2&gt;</PARA>
<PARA>	  &lt;sect3&gt;</PARA>
<PARA>                       &lt;title&gt;1.2  Prepare for Server&lt;/title&gt;</PARA>
<PARA>                        &lt;para&gt;</PARA>
<PARA>a. The libraries:   I used postgresql-libs-7.2.2-1.i386.rpm from the RH 8.0 install cds</PARA>
<PARA></PARA>
<PARA>b.  The database:  I used postgresql-7.2.2-1.i386.rpm from the RH 8.0 install cds</PARA>
<PARA></PARA>
<PARA>c.  The server:  PostgreSQL Database server from postgresql.org, version 7.2. I used postgresql-server-7.2.2-1.i386.rpm from the RH 8.0 install cds</PARA>
<PARA></PARA>
<PARA>d.  PyPgSQL from www.pypgsql.sourceforge.net, version 2.3. I used pyPgSQL-2.3-1.rh80.i386.rpm</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect3&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA>&lt;chapter id=4&gt;</PARA>
<PARA>        &lt;title&gt;2. &lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;Create gnudb User Account&lt;/title&gt;</PARA>
<PARA>                        &lt;para&gt;</PARA>
<PARA>                                 Log in as root and create the user account.</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA></PARA>
<PARA>&lt;chapter id=5&gt;</PARA>
<PARA>        &lt;title&gt;3. &lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;Get gnumed via cvs&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>You need not know anything about cvs, just run these commands as user gnumed:</PARA>
<PARA></PARA>
<PARA>a. mkdir gnumed  &lt;emphasis&gt;NOTE: you really do not need to create this directory. I did and all my examples follow that path.&lt;/emphasis&gt; </PARA>
<PARA></PARA>
<PARA>b. cvs -d:pserver:anoncvs@subversions.gnu.org:/cvsroot/gnumed login</PARA>
<PARA></PARA>
<PARA>c. cvs -z3 -d:pserver:anoncvs@subversions.gnu.org:/cvsroot/gnumed co gnumed</PARA>
<PARA></PARA>
<PARA>&lt;emphasis&gt;NOTE:  There is no password. Hit enter when it asks you for it.&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>This takes some time and brings down all the software and puts it into a directory called  gnumed. You will end up with two or three gnumed directories. One created for the user account, the second that you created in 3a above, and cvs creates the third. </PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>&lt;/chapter&gt;  </PARA>
<PARA>&lt;chapter id=6&gt;</PARA>
<PARA>        &lt;title&gt;4.  Installation&lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;General&lt;/title&gt;</PARA>
<PARA>                        &lt;para&gt;</PARA>
<PARA>If you are doing a clinet+server install the software should be loaded in the following order. &lt;emphasis&gt;That is the order I followed successfully.&lt;/emphasis&gt;</PARA>
<PARA>   - python  -  I assume the libraries are loaded at the same time.</PARA>
<PARA>   - GTK libraries</PARA>
<PARA>   - mx extension libraries</PARA>
<PARA>   - PostgreSQL Database server - load the libs first, then the database and lastly the server:</PARA>
<PARA>        a.   postgressql-libs</PARA>
<PARA>        b.   postgresql database</PARA>
<PARA>        c.   postgresql server</PARA>
<PARA>   - wxWindows windowing library</PARA>
<PARA>   - wxPython</PARA>
<PARA>   - PyPgSQL</PARA>
<PARA></PARA>
<PARA>However, if all that you are doing is a client install, I think you can get away with going with the following:</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>              &lt;sect2&gt;</PARA>
<PARA>                       &lt;title&gt;4.1  Install Client&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>Install the rpms in this order:</PARA>
<PARA></PARA>
<PARA>a.  Python and the libraries [This should already be installed. If not, use the RH package manager GUI.]</PARA>
<PARA></PARA>
<PARA>b.  GTK libraries [This should already be installed. If not, use the RH package manager GUI.]</PARA>
<PARA></PARA>
<PARA>c.  mx</PARA>
<PARA></PARA>
<PARA>d.  wxWindows windowing library </PARA>
<PARA></PARA>
<PARA>e.  wxPython</PARA>
<PARA></PARA>
<PARA>f.  pyPgSQL</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect2&gt;</PARA>
<PARA>              &lt;sect3&gt;</PARA>
<PARA>                       &lt;title&gt;4.2 Install Server&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>Most people would not install just the server and &lt;emphasis&gt;I did not do that.&lt;/emphasis&gt; I am guessing that if you wanted to do that, you would only load:</PARA>
<PARA>a.   postgressql-libs</PARA>
<PARA>b.   postgresql database</PARA>
<PARA>c.   postgresql server</PARA>
<PARA>d.   pyPgSQL &lt;emphasis&gt;I HAVE BEEN TOLD:  This is Needed on the client, mainly. Only needed on the server machine if one is doing the bootstrapping on that machine. &lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>e.   Then, obviously you would need to create the gnumed database and the bootstrap directory has the scripts. I ran the “monolithic” one I call mono when doing a complete install.</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect3&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA>&lt;chapter id=6&gt;</PARA>
<PARA>        &lt;title&gt;5.  Configure Files and Setup Environment Parameters&lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;5.1  PYTHONPATH and GNUMED_DIR&lt;/title&gt;</PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>&lt;emphasis&gt;I HAVE BEEN TOLD:  GnuMed should run without GNUMED_DIR in most circumstances. One only needs to set it if GnuMed absolutely cannot find its files.&lt;/emphasis&gt; [I needed to set it on my RH 8.0 system.]</PARA>
<PARA></PARA>
<PARA>a.  as root:  find / -name site-packages</PARA>
<PARA></PARA>
<PARA>b.  Copy that full path down</PARA>
<PARA></PARA>
<PARA>c.  As user gnumed:  vi ~/.bashrc  - I am assuming you are running the bash script. It is okay if this file does not exist, vi will create it. Put that directory name in using the export command as below. My lines are: </PARA>
<PARA>                export PYTHONPATH=/usr/lib/python2.2/site-packages</PARA>
<PARA>                export GNUMED_DIR=/home/gnumed/gnumed/gnumed/client</PARA>
<PARA></PARA>
<PARA>d.  source ~/.bashrc  [this will make that an environment variable. You can check it by typing env|grep PYTHONPATH]</PARA>
<PARA>              &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>              &lt;sect2&gt;</PARA>
<PARA>                       &lt;title&gt;5.2   pg_clog, postgres.conf and PGDATA&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>&lt;emphasis&gt;[NOTE: you can skip this part for a client-only install]&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>a.  su - postgres - This should put you in the postgres home directory</PARA>
<PARA></PARA>
<PARA>b.  cd data  - the actual path on my machine is: /var/lib/pgsql/data</PARA>
<PARA></PARA>
<PARA>c.  vi pg_hba.conf - uncomment the "local  all" and the "host  all" lines towards the bottom of the file.</PARA>
<PARA></PARA>
<PARA>d.  vi postgresql.conf and uncomment tcpip_socket line and edit it to read:</PARA>
<PARA>                tcip_socket = on</PARA>
<PARA></PARA>
<PARA>e.  uncomment the line:  port = 5432</PARA>
<PARA></PARA>
<PARA>f.  exit out of user postgres and come back to user gnumed</PARA>
<PARA></PARA>
<PARA>g.  vi ~/.bashrc and add this line: export PGDATA=/var/lib/pgsql/data</PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect2&gt;</PARA>
<PARA>              &lt;sect3&gt;</PARA>
<PARA>                       &lt;title&gt;</PARA>
<PARA>                                  5.3  Shortcut Scripts &lt;emphaisi&gt;mono and check_log &lt;/emphasis&gt;, set password and Configure Files</PARA>
<PARA>                        &lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>&lt;emphasis&gt;[NOTE: you can skip this part for a client-only install]&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>a.  as user gnumed, cd to the server/bootstrap directory. </PARA>
<PARA>Mine is cd /home/gnumed/gnumed/gnumed/server/bootstrap </PARA>
<PARA></PARA>
<PARA>b.  vi mono and put this line in it: </PARA>
<PARA>                   python bootstrap-gm_db_system.py --conf-file=bootstrap-monolithic_core.conf</PARA>
<PARA></PARA>
<PARA>c.  exit and type:  chmod 744 mono</PARA>
<PARA></PARA>
<PARA>d.  vi check_log and put this line in it:</PARA>
<PARA>                   tail -100 /home/gnumed/.bootstrap-gm_db_system/bootstrap-gm_db_system.log</PARA>
<PARA></PARA>
<PARA>&lt;emphasis&gt;NOTE:  If your logfile is somewhere else, su - root and do a find / -name "*log*"&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>e.  exit and type:  chmod 744 check_log</PARA>
<PARA></PARA>
<PARA>f.  as user gnumed and in the bootstrap directory, run ./make-links.sh</PARA>
<PARA>&lt;emphasis&gt;I HAVE BEEN TOLD:  This is not needed anymore in normal circumstances.&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>g.  su to root and type passwd postgres  and set the password. This sets  a password for the system user “postgres,” which is different from the database user “postgres.” &lt;emphasis&gt;I HAVE BEEN TOLD:  This is not needed. &lt;/emphasis&gt; [I chose to create a password because I can su into postgres from any user. I do not have to jump to root to get into postgres.]</PARA>
<PARA></PARA>
<PARA>h.  in the bootstrap directory vi bootstrap-monolithic_core.conf and uncomment BOTH password lines for gm-dbowner and postgres and type in the passwords. Select a password for gm-dbowner. I selected the same one I use for the gnumed user account. &lt;emphasis&gt;I HAVE BEEN TOLD:  Many setups use the same name for both thesystem level user account "postgres" under which the</PARA>
<PARA>postgresql data files are installed in the filesystem and for the database superuser. Those accounts are actually unrelated entities. They need not have the same password. In fact, the system account postgres need not have a password at all. It is sufficient to be able to su - to it from root. It helps to</PARA>
<PARA>have a password for the DB account "postgres", though. &lt;/emphasis&gt; </PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect3&gt; </PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA>&lt;chapter id=7&gt;</PARA>
<PARA>        &lt;title&gt;6.&lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;Run Client&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA>a.  as user gnumed, cd to the ....client/wxpython directory. </PARA>
<PARA>Mine is cd /home/gnumed/gnumed/gnumed/client/wxpython</PARA>
<PARA></PARA>
<PARA>b.  ./gnumed.sh   - this should bring up a login GUI. If the GUI comes up, you have successfully installed the client. </PARA>
<PARA></PARA>
<PARA>c.  Write an e mail to "Karsten" and request a hostname, a username, and a password and input them into the GUI. Under the "options" button, select "gnumed-public" and put in the hostname and leave the port as 5432. In the main GUI, input username and pasword. </PARA>
<PARA></PARA>
<PARA>&lt;emphasis&gt;NOTE:  If Karsten gives you "anydoc" as the username and password, he actually means any-doc for both fields. Also NOTE: You should be logged onto the net when you do this, I was user gnumed when I did it.&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>d.  If the GUI does not come up:</PARA>
<PARA> -  lookup the logfile - mine is created at:  /home/gnumed/.gnumed/gnumed.log</PARA>
<PARA> -- gnumed.sh tells you where it is creating one</PARA>
<PARA> -  input the error into google and see what comes up</PARA>
<PARA></PARA>
<PARA>e.  If your error lists files "gmCLI" and "gmLog" - the error actually means files "gmCLI.py" and "gmLog.py" These files are on your system. </PARA>
<PARA></PARA>
<PARA>f.  This error means that your GNUMED_DIR environment variable is not set to ".....client" directory. Do an env| grep GNUMED_DIR or do an echo $GNUMED_DIR to see if it is set correctly. See section 5.1 above.</PARA>
<PARA></PARA>
<PARA>                       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
<PARA></PARA>
<PARA> &lt;chapter id=8&gt;</PARA>
<PARA>        &lt;title&gt;7.&lt;/title&gt;</PARA>
<PARA>              &lt;sect1&gt;</PARA>
<PARA>                       &lt;title&gt;Run Server&lt;/title&gt;</PARA>
<PARA></PARA>
<PARA>                       &lt;para&gt;</PARA>
<PARA></PARA>
<PARA>a.  log out of the gnumed account and log back in for all the environment variables to take affect</PARA>
<PARA></PARA>
<PARA>b.  su - postgres and type pg_ctl restart </PARA>
<PARA></PARA>
<PARA>c.  exit out of user postgres and back into user gnumed</PARA>
<PARA></PARA>
<PARA>d.  in the bootstrap directory, type  ./mono </PARA>
<PARA></PARA>
<PARA>e.  A loooooooong list will start scrolling by - &lt;emphasis&gt;leave it alone.&lt;/emphasis&gt; It will list errors, many of them. Let it run. It should give you a satisfying message: "Done bootstrapping: We probably succeeded."</PARA>
<PARA>&lt;emphasis&gt;I HAVE BEEN TOLD:  We now log this list. It doesn't scroll by anymore.&lt;/emphasis&gt;</PARA>
<PARA></PARA>
<PARA>f.  su - postgres and do pg_ctl restart  - just for good measure.</PARA>
<PARA></PARA>
<PARA>g.  Click on the redhat logo and bring up the services GUI - it is under Server Settings. Check the postgres box for the service to load upon bootup.</PARA>
<PARA></PARA>
<PARA>h.  Now you can start your client - see 6b above. Except you will not be connecting to a remote server. Your database is gnumed and your host is localhost. Use the gnumed password and the application should come up.</PARA>
<PARA></PARA>
<PARA>i.  If you stopped the “mono” process the first time, which creates the database,  with a control-c like I did thinking the long scrolling list is not what I should be seeing: ====&gt; you have to drop the half-created database and re-run mono again. Otherwise mono will not run all the way and you do not have a functioning server. </PARA>
<PARA></PARA>
<PARA>Since I have "webmin" running, I used that to drop the database “gnumed”. Otherwise, on the command line as any user you could:  </PARA>
<PARA></PARA>
<PARA>                  dropdb -U postgres gnumed</PARA>
<PARA></PARA>
<PARA>j.  There are other instructions in the gnumed.org installation writeup about how to create a real life instance. I have not reached that far - so I cannot say anything about it.</PARA>
<PARA>       &lt;/para&gt;</PARA>
<PARA>              &lt;/sect1&gt;</PARA>
<PARA>&lt;/chapter&gt;</PARA>
</ARTICLE>
</BOOK>
