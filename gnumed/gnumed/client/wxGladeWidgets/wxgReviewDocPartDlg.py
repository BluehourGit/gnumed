#!/usr/bin/env python
# -*- coding: ISO-8859-15 -*-
# generated by wxGlade 0.4cvs on Mon Feb 27 16:08:54 2006

import wx

class wxgReviewDocPartDlg(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: wxgReviewDocPartDlg.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER|wx.MAXIMIZE_BOX|wx.MINIMIZE_BOX|wx.THICK_FRAME|wx.STAY_ON_TOP
        wx.Dialog.__init__(self, *args, **kwds)
        self.__szr_top_staticbox = wx.StaticBox(self, -1, _("Existing reviews"))
        self.doc_metadata = wx.StaticText(self, -1, _("Display document metadata here."))
        self._LCTRL_existing_reviews = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.LC_ALIGN_LEFT|wx.LC_SINGLE_SEL|wx.LC_HRULES|wx.LC_VRULES|wx.NO_BORDER)
        self._ChoiceBOX_episode = wx.Choice(self, -1, choices=[])
        self._ChBOX_abnormal = wx.CheckBox(self, -1, _("technically abnormal"))
        self._ChBOX_responsible = wx.CheckBox(self, -1, _("make me responsible"))
        self._ChBOX_relevant = wx.CheckBox(self, -1, _("clinically relevant"))
        self._ChBOX_whole_doc = wx.CheckBox(self, -1, _("apply to entire document"))
        self._BTN_save = wx.Button(self, -1, _("Save"))
        self._BTN_cancel = wx.Button(self, -1, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHECKBOX, self._on_toggled_abnormal, self._ChBOX_abnormal)
        self.Bind(wx.EVT_CHECKBOX, self._on_toggled_responsible, self._ChBOX_responsible)
        self.Bind(wx.EVT_CHECKBOX, self._on_toggled_relevant, self._ChBOX_relevant)
        self.Bind(wx.EVT_CHECKBOX, self._toggled_entire_doc, self._ChBOX_whole_doc)
        self.Bind(wx.EVT_BUTTON, self._on_save_button_pressed, self._BTN_save)
        self.Bind(wx.EVT_BUTTON, self._on_cancel_button_pressed, self._BTN_cancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: wxgReviewDocPartDlg.__set_properties
        self.SetTitle(_("Review document part"))
        self._LCTRL_existing_reviews.SetToolTipString(_("Lists previous reviews for this document part.\n\nThe first line (marked with an icon) will show your previous review if there is one.\nThe second line (marked with a blue bar) will display the review of the responsible provider if there is such a review.\n\n You can edit your review below."))
        self._LCTRL_existing_reviews.Enable(False)
        self._ChoiceBOX_episode.SetToolTipString(_("Pick the episode which this document belongs to."))
        self._ChoiceBOX_episode.Enable(False)
        self._ChoiceBOX_episode.SetSelection(0)
        self._ChBOX_responsible.SetToolTipString(_("Check this if you intend to take over responsibility for this document and not just review it."))
        self._ChBOX_whole_doc.SetToolTipString(_("Apply review to entire document rather than just this current part (page)."))
        self._ChBOX_whole_doc.SetValue(1)
        self._BTN_save.SetToolTipString(_("Save your review."))
        self._BTN_cancel.SetFocus()
        self._BTN_cancel.SetDefault()
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: wxgReviewDocPartDlg.__do_layout
        __szr_main = wx.BoxSizer(wx.VERTICAL)
        __szr_bottom = wx.BoxSizer(wx.HORIZONTAL)
        __szr_grid_review = wx.FlexGridSizer(2, 2, 0, 0)
        __szr_episode = wx.BoxSizer(wx.HORIZONTAL)
        __szr_top = wx.StaticBoxSizer(self.__szr_top_staticbox, wx.HORIZONTAL)
        __szr_main.Add(self.doc_metadata, 0, wx.ADJUST_MINSIZE, 0)
        __szr_top.Add(self._LCTRL_existing_reviews, 1, wx.EXPAND, 0)
        __szr_main.Add(__szr_top, 3, wx.EXPAND, 0)
        __lbl_episode_picker = wx.StaticText(self, -1, _("Episode:"))
        __szr_episode.Add(__lbl_episode_picker, 0, wx.RIGHT|wx.ALIGN_CENTER_VERTICAL|wx.ADJUST_MINSIZE, 3)
        __szr_episode.Add(self._ChoiceBOX_episode, 0, wx.ADJUST_MINSIZE, 0)
        __szr_main.Add(__szr_episode, 0, 0, 0)
        __lbl_middle_msg = wx.StaticText(self, -1, _("Your review :"))
        __szr_main.Add(__lbl_middle_msg, 0, wx.ADJUST_MINSIZE, 0)
        __szr_grid_review.Add(self._ChBOX_abnormal, 0, wx.LEFT|wx.ADJUST_MINSIZE, 10)
        __szr_grid_review.Add(self._ChBOX_responsible, 0, wx.LEFT|wx.ADJUST_MINSIZE, 10)
        __szr_grid_review.Add(self._ChBOX_relevant, 0, wx.LEFT|wx.ADJUST_MINSIZE, 10)
        __szr_grid_review.Add(self._ChBOX_whole_doc, 0, wx.LEFT|wx.ADJUST_MINSIZE, 10)
        __szr_main.Add(__szr_grid_review, 1, wx.EXPAND, 0)
        __szr_bottom.Add(self._BTN_save, 0, wx.ADJUST_MINSIZE, 0)
        __szr_bottom.Add(self._BTN_cancel, 0, wx.ADJUST_MINSIZE, 0)
        __szr_main.Add(__szr_bottom, 0, wx.EXPAND, 0)
        self.SetAutoLayout(True)
        self.SetSizer(__szr_main)
        __szr_main.Fit(self)
        __szr_main.SetSizeHints(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def _on_toggled_abnormal(self, event): # wxGlade: wxgReviewDocPartDlg.<event_handler>
        print "Event handler `_on_toggled_abnormal' not implemented!"
        event.Skip()

    def _on_toggled_responsible(self, event): # wxGlade: wxgReviewDocPartDlg.<event_handler>
        print "Event handler `_on_toggled_responsible' not implemented!"
        event.Skip()

    def _on_toggled_relevant(self, event): # wxGlade: wxgReviewDocPartDlg.<event_handler>
        print "Event handler `_on_toggled_relevant' not implemented!"
        event.Skip()

    def _toggled_entire_doc(self, event): # wxGlade: wxgReviewDocPartDlg.<event_handler>
        print "Event handler `_toggled_entire_doc' not implemented!"
        event.Skip()

    def _on_save_button_pressed(self, event): # wxGlade: wxgReviewDocPartDlg.<event_handler>
        print "Event handler `_on_save_button_pressed' not implemented!"
        event.Skip()

    def _on_cancel_button_pressed(self, event): # wxGlade: wxgReviewDocPartDlg.<event_handler>
        print "Event handler `_on_cancel_button_pressed' not implemented!"
        event.Skip()

# end of class wxgReviewDocPartDlg


