#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.7.2
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
# end wxGlade


class wxgCreatePatientMediaDlg(wx.Dialog):
	def __init__(self, *args, **kwds):
		# begin wxGlade: wxgCreatePatientMediaDlg.__init__
		kwds["style"] = wx.DEFAULT_DIALOG_STYLE | wx.MAXIMIZE_BOX | wx.MINIMIZE_BOX | wx.RESIZE_BORDER
		wx.Dialog.__init__(self, *args, **kwds)
		self._LBL_header = wx.StaticText(self, wx.ID_ANY, _("Describe the intended action."))
		self._LBL_directory = wx.StaticText(self, wx.ID_ANY, "", style=wx.ST_ELLIPSIZE_START)
		self._BTN_select_directory = wx.Button(self, wx.ID_ANY, _("&Select"), style=wx.BU_EXACTFIT)
		self._LBL_dir_is_empty = wx.StaticText(self, wx.ID_ANY, _("empty?\nDICOMDIR ?\ndocuments/ ?"))
		self._BTN_browse_directory = wx.Button(self, wx.ID_ANY, _("Browse"), style=wx.BU_EXACTFIT)
		self._LBL_existing_data = wx.StaticText(self, wx.ID_ANY, _("Existing data:"))
		self._RBTN_include_data = wx.RadioButton(self, wx.ID_ANY, _("Include"))
		self._RBTN_remove_data = wx.RadioButton(self, wx.ID_ANY, _("Remove"))
		self._CHBOX_include_directory = wx.CheckBox(self, wx.ID_ANY, _("&Include into CD / DVD"), style=wx.CHK_2STATE)
		self._CHBOX_use_subdirectory = wx.CheckBox(self, wx.ID_ANY, _("Use subdirectory:"), style=wx.CHK_2STATE)
		self._LBL_subdirectory = wx.StaticText(self, wx.ID_ANY, _("<patient directory>"), style=wx.ST_ELLIPSIZE_START)
		self._BTN_save = wx.Button(self, wx.ID_SAVE, "")
		self._BTN_cancel = wx.Button(self, wx.ID_CANCEL, "")

		self.__set_properties()
		self.__do_layout()

		self.Bind(wx.EVT_BUTTON, self._on_select_directory_button_pressed, self._BTN_select_directory)
		self.Bind(wx.EVT_BUTTON, self._on_browse_directory_button_pressed, self._BTN_browse_directory)
		self.Bind(wx.EVT_CHECKBOX, self._on_use_subdirectory_changed, self._CHBOX_use_subdirectory)
		self.Bind(wx.EVT_BUTTON, self._on_save_button_pressed, self._BTN_save)
		# end wxGlade

	def __set_properties(self):
		# begin wxGlade: wxgCreatePatientMediaDlg.__set_properties
		self.SetTitle(_("Creating patient media"))
		self.SetSize((600, 311))
		self._LBL_directory.SetFont(wx.Font(9, wx.DEFAULT, wx.SLANT, wx.NORMAL, 0, ""))
		self._BTN_select_directory.SetToolTip(wx.ToolTip(_("Select the directory.")))
		self._LBL_dir_is_empty.SetFont(wx.Font(9, wx.DEFAULT, wx.SLANT, wx.NORMAL, 0, ""))
		self._BTN_browse_directory.SetToolTip(wx.ToolTip(_("Browse the selected directory.")))
		self._RBTN_include_data.SetToolTip(wx.ToolTip(_("Include existing data if any.")))
		self._RBTN_include_data.SetValue(1)
		self._RBTN_remove_data.SetToolTip(wx.ToolTip(_("Remove existing data if any.")))
		self._CHBOX_include_directory.SetToolTip(wx.ToolTip(_("Check if you want to include the selected directory into the CD / DVD.")))
		self._CHBOX_include_directory.Enable(False)
		self._CHBOX_include_directory.Hide()
		self._CHBOX_include_directory.SetValue(1)
		self._CHBOX_use_subdirectory.SetToolTip(wx.ToolTip(_("Check if you want to use a subdirectory within the directory selected above.\n\nThis will leave alone any existing data.")))
		self._LBL_subdirectory.SetFont(wx.Font(9, wx.DEFAULT, wx.ITALIC, wx.NORMAL, 0, ""))
		self._BTN_save.SetToolTip(wx.ToolTip(_("Create patient media (in target directory or on CD / DVD).")))
		self._BTN_cancel.SetToolTip(wx.ToolTip(_("Abort creating patient media.")))
		# end wxGlade

	def __do_layout(self):
		# begin wxGlade: wxgCreatePatientMediaDlg.__do_layout
		__szr_main = wx.BoxSizer(wx.VERTICAL)
		__szr_buttons = wx.BoxSizer(wx.HORIZONTAL)
		__szr_subdirectory = wx.BoxSizer(wx.HORIZONTAL)
		__szr_existing_data = wx.BoxSizer(wx.HORIZONTAL)
		__szr_dir_state = wx.BoxSizer(wx.HORIZONTAL)
		__szr_directory = wx.BoxSizer(wx.HORIZONTAL)
		__szr_main.Add(self._LBL_header, 1, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 3)
		__lbl_directory = wx.StaticText(self, wx.ID_ANY, _("Path:"))
		__szr_directory.Add(__lbl_directory, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 10)
		__szr_directory.Add(self._LBL_directory, 1, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 5)
		__szr_directory.Add(self._BTN_select_directory, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__szr_main.Add(__szr_directory, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 3)
		__szr_dir_state.Add((20, 20), 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__szr_dir_state.Add(self._LBL_dir_is_empty, 0, wx.ALIGN_CENTER | wx.LEFT | wx.RIGHT | wx.TOP, 3)
		__szr_dir_state.Add((20, 20), 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__szr_dir_state.Add(self._BTN_browse_directory, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__szr_main.Add(__szr_dir_state, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 3)
		__szr_existing_data.Add(self._LBL_existing_data, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 10)
		__szr_existing_data.Add(self._RBTN_include_data, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 3)
		__szr_existing_data.Add(self._RBTN_remove_data, 0, wx.ALIGN_CENTER_VERTICAL, 5)
		__szr_existing_data.Add(self._CHBOX_include_directory, 0, wx.ALIGN_CENTER_VERTICAL, 3)
		__szr_main.Add(__szr_existing_data, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 3)
		__szr_subdirectory.Add(self._CHBOX_use_subdirectory, 0, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 10)
		__szr_subdirectory.Add(self._LBL_subdirectory, 1, wx.ALIGN_CENTER_VERTICAL | wx.RIGHT, 3)
		__szr_main.Add(__szr_subdirectory, 0, wx.EXPAND | wx.LEFT | wx.RIGHT | wx.TOP, 3)
		__szr_buttons.Add((20, 20), 2, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__szr_buttons.Add(self._BTN_save, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__szr_buttons.Add((20, 20), 1, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__szr_buttons.Add(self._BTN_cancel, 0, wx.ALIGN_CENTER_VERTICAL, 0)
		__szr_buttons.Add((20, 20), 2, wx.ALIGN_CENTER_VERTICAL | wx.EXPAND, 0)
		__szr_main.Add(__szr_buttons, 0, wx.ALL | wx.EXPAND, 3)
		self.SetSizer(__szr_main)
		self.Layout()
		# end wxGlade

	def _on_select_directory_button_pressed(self, event):  # wxGlade: wxgCreatePatientMediaDlg.<event_handler>
		print "Event handler '_on_select_directory_button_pressed' not implemented!"
		event.Skip()

	def _on_browse_directory_button_pressed(self, event):  # wxGlade: wxgCreatePatientMediaDlg.<event_handler>
		print "Event handler '_on_browse_directory_button_pressed' not implemented!"
		event.Skip()

	def _on_use_subdirectory_changed(self, event):  # wxGlade: wxgCreatePatientMediaDlg.<event_handler>
		print "Event handler '_on_use_subdirectory_changed' not implemented!"
		event.Skip()

	def _on_save_button_pressed(self, event):  # wxGlade: wxgCreatePatientMediaDlg.<event_handler>
		print "Event handler '_on_save_button_pressed' not implemented!"
		event.Skip()

# end of class wxgCreatePatientMediaDlg
