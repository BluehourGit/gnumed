#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 from "/home/ncq/Projekte/gm-git/gnumed/gnumed/client/wxg/wxgFancySoapEditorPnl.wxg"

import wx

# begin wxGlade: extracode
# end wxGlade


class wxgFancySoapEditorPnl(wx.Panel):
    def __init__(self, *args, **kwds):

        from Gnumed.wxpython.gmNarrativeWidgets import cSoapNoteInputNotebook
        from Gnumed.wxpython.gmCodingWidgets import cGenericCodesPhraseWheel

        # begin wxGlade: wxgFancySoapEditorPnl.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self._TCTRL_rfe = wx.TextCtrl(self, -1, "", style=wx.NO_BORDER)
        self._PRW_rfe_codes = cGenericCodesPhraseWheel(self, -1, "", style=wx.NO_BORDER)
        self._TCTRL_aoe = wx.TextCtrl(self, -1, "", style=wx.NO_BORDER)
        self._PRW_aoe_codes = cGenericCodesPhraseWheel(self, -1, "", style=wx.NO_BORDER)
        self._NB_soap_editors = cSoapNoteInputNotebook(self, -1, style=0)
        self.notebook_1_pane_1 = wx.Panel(self._NB_soap_editors, -1)
        self._BTN_new_editor = wx.Button(self, -1, _("&New"), style=wx.BU_EXACTFIT)
        self._BTN_clear_editor = wx.Button(self, -1, _("&Clear"), style=wx.BU_EXACTFIT)
        self._BTN_discard_editor = wx.Button(self, -1, _("&Discard"), style=wx.BU_EXACTFIT)
        self._BTN_save_note = wx.Button(self, -1, _("&Save"), style=wx.BU_EXACTFIT)
        self._BTN_save_note_under = wx.Button(self, -1, _("Save &under"), style=wx.BU_EXACTFIT)
        self._BTN_image = wx.Button(self, -1, _("&Image"), style=wx.BU_EXACTFIT)
        self._BTN_save_encounter = wx.Button(self, -1, _("Save"), style=wx.BU_EXACTFIT)
        self._BTN_save_all = wx.Button(self, -1, _("Save &all"), style=wx.BU_EXACTFIT)
        self.__szr_right_staticbox = wx.StaticBox(self, -1, _("New notelets in current encounter"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self._on_new_editor_button_pressed, self._BTN_new_editor)
        self.Bind(wx.EVT_BUTTON, self._on_clear_editor_button_pressed, self._BTN_clear_editor)
        self.Bind(wx.EVT_BUTTON, self._on_discard_editor_button_pressed, self._BTN_discard_editor)
        self.Bind(wx.EVT_BUTTON, self._on_save_note_button_pressed, self._BTN_save_note)
        self.Bind(wx.EVT_BUTTON, self._on_save_note_under_button_pressed, self._BTN_save_note_under)
        self.Bind(wx.EVT_BUTTON, self._on_image_button_pressed, self._BTN_image)
        self.Bind(wx.EVT_BUTTON, self._on_save_encounter_button_pressed, self._BTN_save_encounter)
        self.Bind(wx.EVT_BUTTON, self._on_save_all_button_pressed, self._BTN_save_all)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: wxgFancySoapEditorPnl.__set_properties
        self._TCTRL_rfe.SetToolTipString(_("Also known as the Reason For Encounter/Visit (RFE).\n\nOptionally captures why the consultation takes place.\n\nIt may be due to a patient request or it may be prompted by other reasons. Often initially collected at the front desk and put into a waiting list comment. May turn out to just be a proxy request for why the patient really is here."))
        self._PRW_rfe_codes.SetToolTipString(_("Codes relevant to the Reason for Encounter\nseparated by \";\"."))
        self._TCTRL_aoe.SetToolTipString(_("Also known as the Assessment of Encounter/Visit (AOE)\n\nOptionally summarizes the outcome/assessment of the consultation from the doctors point of view.\n\nNote that this summary spans all the problems discussed during this encounter."))
        self._PRW_aoe_codes.SetToolTipString(_("Codes relevant to the Assessment of Encounter\nseparated by \";\"."))
        self._BTN_new_editor.SetToolTipString(_("Open a new progress note editor.\n\nThere is a configuration item on whether to allow several new-episode editors at once."))
        self._BTN_clear_editor.SetToolTipString(_("Clear the editor for the displayed progress note."))
        self._BTN_discard_editor.SetToolTipString(_("Discard the editor for the displayed progress note."))
        self._BTN_save_note.SetToolTipString(_("Save the currently displayed progress note under the current encounter."))
        self._BTN_save_note_under.SetToolTipString(_("Save the currently displayed note into an encounter selected from a list of encounters."))
        self._BTN_image.SetToolTipString(_("Add a visual progress note for this episode."))
        self._BTN_save_encounter.SetToolTipString(_("Save the encounter details."))
        self._BTN_save_all.SetToolTipString(_("Save encounter details and all progress notes."))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: wxgFancySoapEditorPnl.__do_layout
        self.__szr_right_staticbox.Lower()
        __szr_right = wx.StaticBoxSizer(self.__szr_right_staticbox, wx.VERTICAL)
        __szr_buttons = wx.BoxSizer(wx.HORIZONTAL)
        __gszr_encounter_details = wx.FlexGridSizer(2, 2, 2, 5)
        __szr_aoe = wx.BoxSizer(wx.HORIZONTAL)
        __szr_rfe_details = wx.BoxSizer(wx.HORIZONTAL)
        __lbl_rfe = wx.StaticText(self, -1, _("Purpose"))
        __gszr_encounter_details.Add(__lbl_rfe, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        __szr_rfe_details.Add(self._TCTRL_rfe, 2, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 5)
        __lbl_rfe_codes = wx.StaticText(self, -1, _("Codes:"))
        __szr_rfe_details.Add(__lbl_rfe_codes, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        __szr_rfe_details.Add(self._PRW_rfe_codes, 1, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        __gszr_encounter_details.Add(__szr_rfe_details, 1, wx.EXPAND, 0)
        __lbl_aoe = wx.StaticText(self, -1, _("Summary"))
        __gszr_encounter_details.Add(__lbl_aoe, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        __szr_aoe.Add(self._TCTRL_aoe, 2, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 5)
        __lbl_aoe_codes = wx.StaticText(self, -1, _("Codes:"))
        __szr_aoe.Add(__lbl_aoe_codes, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        __szr_aoe.Add(self._PRW_aoe_codes, 1, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        __gszr_encounter_details.Add(__szr_aoe, 0, wx.EXPAND, 3)
        __gszr_encounter_details.AddGrowableCol(1)
        __szr_right.Add(__gszr_encounter_details, 0, wx.RIGHT | wx.TOP | wx.BOTTOM | wx.EXPAND, 3)
        self._NB_soap_editors.AddPage(self.notebook_1_pane_1, _("tab1"))
        __szr_right.Add(self._NB_soap_editors, 4, wx.EXPAND, 3)
        __lbl_editor = wx.StaticText(self, -1, _("Notelet:"))
        __szr_buttons.Add(__lbl_editor, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        __szr_buttons.Add(self._BTN_new_editor, 0, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        __szr_buttons.Add(self._BTN_clear_editor, 0, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        __szr_buttons.Add(self._BTN_discard_editor, 0, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        __szr_buttons.Add(self._BTN_save_note, 0, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        __szr_buttons.Add(self._BTN_save_note_under, 0, wx.RIGHT | wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        __szr_buttons.Add(self._BTN_image, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 0)
        __szr_buttons.Add((1, 1), 1, wx.EXPAND, 0)
        __lbl_encounter = wx.StaticText(self, -1, _("Encounter:"))
        __szr_buttons.Add(__lbl_encounter, 0, wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        __szr_buttons.Add(self._BTN_save_encounter, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 3)
        __szr_buttons.Add((1, 1), 1, wx.EXPAND, 0)
        __szr_buttons.Add(self._BTN_save_all, 0, wx.EXPAND | wx.ALIGN_CENTER_VERTICAL, 5)
        __szr_right.Add(__szr_buttons, 0, wx.RIGHT | wx.TOP | wx.EXPAND, 3)
        self.SetSizer(__szr_right)
        __szr_right.Fit(self)
        # end wxGlade

    def _on_new_editor_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_new_editor_button_pressed' not implemented!"
        event.Skip()

    def _on_clear_editor_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_clear_editor_button_pressed' not implemented!"
        event.Skip()

    def _on_discard_editor_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_discard_editor_button_pressed' not implemented!"
        event.Skip()

    def _on_save_note_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_save_note_button_pressed' not implemented!"
        event.Skip()

    def _on_save_note_under_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_save_note_under_button_pressed' not implemented!"
        event.Skip()

    def _on_image_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_image_button_pressed' not implemented!"
        event.Skip()

    def _on_save_encounter_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_save_encounter_button_pressed' not implemented!"
        event.Skip()

    def _on_save_all_button_pressed(self, event):  # wxGlade: wxgFancySoapEditorPnl.<event_handler>
        print "Event handler `_on_save_all_button_pressed' not implemented!"
        event.Skip()

# end of class wxgFancySoapEditorPnl
